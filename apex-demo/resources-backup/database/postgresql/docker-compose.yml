# Docker Compose for APEX PostgreSQL Demo Database
# This sets up a PostgreSQL database with sample financial data for lookup demonstrations

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: apex-demo-postgres
    restart: unless-stopped
    
    environment:
      POSTGRES_DB: apex_demo
      POSTGRES_USER: apex_user
      POSTGRES_PASSWORD: apex_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      
    ports:
      - "5432:5432"
      
    volumes:
      # Mount initialization scripts
      - ./init:/docker-entrypoint-initdb.d
      # Mount data directory for persistence
      - postgres_data:/var/lib/postgresql/data
      # Mount configuration
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c log_statement=all
      -c log_destination=stderr
      -c logging_collector=on
      -c log_directory=/var/log/postgresql
      -c log_filename=postgresql-%Y-%m-%d_%H%M%S.log
      -c log_rotation_age=1d
      -c log_rotation_size=100MB
      
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apex_user -d apex_demo"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
      
    networks:
      - apex-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: apex-demo-pgadmin
    restart: unless-stopped
    
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@apex-demo.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      
    ports:
      - "8080:80"
      
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      
    depends_on:
      postgres:
        condition: service_healthy
        
    networks:
      - apex-network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  apex-network:
    driver: bridge
    
# Usage Instructions:
# 1. Start the database: docker-compose up -d
# 2. Connect to database: 
#    - Host: localhost
#    - Port: 5432
#    - Database: apex_demo
#    - Username: apex_user
#    - Password: apex_password
# 3. Access pgAdmin: http://localhost:8080
#    - Email: admin@apex-demo.com
#    - Password: admin123
# 4. Stop the database: docker-compose down
# 5. Remove all data: docker-compose down -v
