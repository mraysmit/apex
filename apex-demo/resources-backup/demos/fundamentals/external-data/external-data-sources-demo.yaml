# ============================================================================
# APEX Rules Engine - External Data Sources Configuration Demo
# ============================================================================
#
# This configuration demonstrates comprehensive external data source setups
# including database connections, REST APIs, caching, and monitoring.
#
# COVERAGE: This example covers the following APEX YAML keywords:
# - dataSources, host, port, database, baseUrl, endpoints, queries
# - cache, cache-ttl, ttlSeconds, maxSize, timeout
# - defaultConnectionTimeout, healthCheckLogging, sourceType
# - keyHeader, keyValue, getUserById, getActiveUsers, getCurrentRate
#
# ============================================================================

metadata:
  name: "External Data Sources Configuration Demo"
  version: "1.0.0"
  description: "Comprehensive demonstration of external data source configurations"
  type: "external-data-config"
  author: "APEX Demo Team"
  created: "2025-08-24"
  tags: ["external-data", "database", "rest-api", "caching", "monitoring"]

# External data source configurations
dataSources:
  # PostgreSQL database configuration
  - name: "user-database"
    type: "database"
    sourceType: "postgresql"
    enabled: true
    description: "Primary user database for customer data"
    tags: ["database", "postgresql", "users"]
    
    connection:
      host: "localhost"
      port: 5432
      database: "userdb"
      username: "app_user"
      password: "${DB_PASSWORD}"
      schema: "public"
      
      # Connection pool settings
      maxPoolSize: 20
      minPoolSize: 5
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      
      # SSL configuration
      sslEnabled: true
      sslMode: "require"
    
    # Predefined queries for common operations
    queries:
      getUserById: "SELECT id, username, email, created_at FROM users WHERE id = :id"
      getUserByEmail: "SELECT id, username, email, created_at FROM users WHERE email = :email"
      getActiveUsers: "SELECT id, username, email FROM users WHERE status = 'ACTIVE' ORDER BY created_at DESC"
      getUserCount: "SELECT COUNT(*) as total FROM users"
      getRecentUsers: "SELECT * FROM users WHERE created_at >= :startDate ORDER BY created_at DESC LIMIT :limit"
    
    # Parameter definitions for queries
    parameterNames:
      - "id"
      - "email"
      - "status"
      - "startDate"
      - "limit"
    
    # Caching configuration for performance
    cache:
      enabled: true
      ttlSeconds: 300
      maxSize: 1000
      keyPrefix: "userdb"
      cache-ttl: 300  # Alternative syntax
    
    # Health check configuration
    healthCheck:
      enabled: true
      intervalSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 3
      query: "SELECT 1"

  # REST API configuration for currency rates
  - name: "currency-rates-api"
    type: "rest-api"
    sourceType: "http"
    enabled: true
    description: "External API for real-time currency exchange rates"
    tags: ["rest-api", "currency", "rates"]
    
    connection:
      baseUrl: "https://api.exchangerates.com/v1"
      timeout: 5000
      connectTimeout: 3000
      readTimeout: 10000
      
      # HTTP client configuration
      maxConnections: 50
      maxConnectionsPerRoute: 10
      keepAliveTimeout: 30000
    
    # API endpoints
    endpoints:
      getCurrentRate: "/rates/{currency}"
      getHistoricalRate: "/rates/{currency}/{date}"
      getAllRates: "/rates/latest"
      getCurrencyInfo: "/currencies/{currency}"
    
    # Authentication configuration
    authentication:
      type: "api-key"
      keyHeader: "X-API-Key"
      keyValue: "${EXCHANGE_API_KEY}"
      
    # Response caching
    cache:
      enabled: true
      ttlSeconds: 600  # 10 minutes for currency data
      maxSize: 500
      keyPrefix: "rates"
    
    # Circuit breaker for resilience
    circuitBreaker:
      enabled: true
      failureThreshold: 5
      recoveryTimeout: 30000
      halfOpenMaxCalls: 3

  # In-memory cache data source
  - name: "reference-cache"
    type: "cache"
    sourceType: "memory"
    enabled: true
    description: "In-memory cache for frequently accessed reference data"
    
    cache:
      enabled: true
      ttlSeconds: 3600  # 1 hour
      maxSize: 10000
      evictionPolicy: "LRU"
      
    # Cache warming configuration
    warmup:
      enabled: true
      preloadKeys: ["currencies", "countries", "markets"]
      preloadOnStartup: true

# Global configuration settings
configuration:
  # Default timeouts for all data sources
  defaultConnectionTimeout: 30000
  defaultReadTimeout: 15000
  defaultWriteTimeout: 10000
  
  # Default health check settings
  defaultHealthCheck:
    enabled: true
    intervalSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
  
  # Default cache settings
  defaultCache:
    enabled: true
    ttlSeconds: 300
    maxSize: 1000
    evictionPolicy: "LRU"
  
  # Monitoring and observability
  monitoring:
    enabled: true
    metricsCollectionInterval: 60
    healthCheckLogging: true
    performanceLogging: true
    slowQueryThreshold: 1000  # Log queries slower than 1 second
  
  # Security settings
  security:
    encryptPasswords: true
    requireSSL: true
    allowPlaintextPasswords: false
    certificateValidation: true
  
  # Connection pooling defaults
  connectionPool:
    defaultMaxPoolSize: 20
    defaultMinPoolSize: 5
    defaultConnectionTimeout: 30000
    defaultIdleTimeout: 600000
    defaultMaxLifetime: 1800000
  
  # Retry configuration
  retry:
    enabled: true
    maxAttempts: 3
    backoffMultiplier: 2.0
    initialDelay: 1000
    maxDelay: 30000

# Environment-specific overrides
environments:
  development:
    dataSources:
      - name: "user-database"
        connection:
          host: "localhost"
          sslEnabled: false
        cache:
          ttlSeconds: 60  # Shorter cache in dev
      
      - name: "currency-rates-api"
        connection:
          baseUrl: "https://api-dev.exchangerates.com/v1"
        cache:
          ttlSeconds: 300
  
  staging:
    dataSources:
      - name: "user-database"
        connection:
          host: "staging-db.example.com"
          maxPoolSize: 10
        cache:
          ttlSeconds: 180
  
  production:
    dataSources:
      - name: "user-database"
        connection:
          host: "prod-db.example.com"
          maxPoolSize: 50
        cache:
          ttlSeconds: 600
          maxSize: 5000
      
      - name: "currency-rates-api"
        cache:
          ttlSeconds: 900  # 15 minutes in production
          maxSize: 2000
