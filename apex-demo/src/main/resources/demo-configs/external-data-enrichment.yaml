# ============================================================================
# APEX Rules Engine - External Data Source Enrichment Configuration
# ============================================================================
#
# This YAML configuration demonstrates proper usage of external data sources
# instead of hardcoded inline datasets. This approach provides:
#
# ✅ Real data source integration
# ✅ Dynamic data loading
# ✅ Health monitoring and metrics
# ✅ Connection management
# ✅ Scalable data access patterns
# ✅ Configuration-driven setup
#
# This replaces the old approach of using inline datasets with hardcoded values.
#
# ============================================================================

# External Data Sources Configuration
dataSources:
  # Currency reference data from cache
  - name: "currency-reference-source"
    type: "cache"
    enabled: true
    description: "Currency reference data cache"
    cache:
      enabled: true
      ttlSeconds: 7200  # 2 hours
      maxSize: 500
      keyPrefix: "currency"
    healthCheck:
      enabled: true
      intervalSeconds: 300
      timeoutSeconds: 10

  # Customer tier data from file system
  - name: "customer-tier-source"
    type: "file-system"
    enabled: true
    description: "Customer tier configuration from JSON files"
    connection:
      basePath: "demo-data/reference"
      filePattern: "customer-tiers.json"
      recursive: false
      watchForChanges: true
      encoding: "UTF-8"
    fileFormat:
      type: "json"
      rootPath: "$.tiers"
    cache:
      enabled: true
      ttlSeconds: 3600  # 1 hour
      maxSize: 100
    healthCheck:
      enabled: true
      intervalSeconds: 600
      timeoutSeconds: 15

  # Product catalog from REST API
  - name: "product-catalog-source"
    type: "rest-api"
    enabled: true
    description: "Product catalog from external API"
    connection:
      url: "https://api.demo.apex.com"
      timeoutSeconds: 30
      retryAttempts: 3
    endpoints:
      product-lookup: "/api/v1/products/{productId}"
      product-search: "/api/v1/products/search"
    authentication:
      type: "api-key"
      apiKey: "${DEMO_API_KEY:demo-key-12345}"
    cache:
      enabled: true
      ttlSeconds: 1800  # 30 minutes
      maxSize: 1000
    healthCheck:
      enabled: true
      intervalSeconds: 120
      timeoutSeconds: 10

  # Geographic data from database
  - name: "geographic-data-source"
    type: "database"
    enabled: true
    description: "Geographic reference data from database"
    connection:
      url: "jdbc:h2:mem:demo;DB_CLOSE_DELAY=-1"
      username: "demo"
      password: "demo"
      driverClassName: "org.h2.Driver"
      maxPoolSize: 10
      connectionTimeout: 30000
    queries:
      country-lookup: "SELECT * FROM countries WHERE code = ?"
      region-lookup: "SELECT * FROM regions WHERE country_code = ?"
    cache:
      enabled: true
      ttlSeconds: 14400  # 4 hours
      maxSize: 200
    healthCheck:
      enabled: true
      intervalSeconds: 300
      timeoutSeconds: 15

# Enrichment Rules using External Data Sources
enrichments:
  # Currency enrichment using cache data source
  - id: "currency-external-enrichment"
    name: "Currency Enrichment from External Source"
    type: "lookup-enrichment"
    target-type: "Transaction"
    enabled: true
    priority: 100
    condition: "#transaction.currency != null"
    lookup-config:
      data-source: "currency-reference-source"
      lookup-key: "#transaction.currency"
      cache-key-template: "currency:{0}"
    field-mappings:
      - source-field: "name"
        target-field: "currencyName"
      - source-field: "symbol"
        target-field: "currencySymbol"
      - source-field: "region"
        target-field: "currencyRegion"
      - source-field: "decimalPlaces"
        target-field: "currencyDecimalPlaces"
      - source-field: "active"
        target-field: "currencyActive"
      - source-field: "tradeable"
        target-field: "currencyTradeable"

  # Customer tier enrichment using file system data source
  - id: "customer-tier-external-enrichment"
    name: "Customer Tier Enrichment from File System"
    type: "lookup-enrichment"
    target-type: "Customer"
    enabled: true
    priority: 200
    condition: "#customer.tierId != null"
    lookup-config:
      data-source: "customer-tier-source"
      lookup-key: "#customer.tierId"
      query-template: "tiers[?(@.id == '{0}')]"
    field-mappings:
      - source-field: "name"
        target-field: "customerTierName"
      - source-field: "minBalance"
        target-field: "customerTierMinBalance"
      - source-field: "benefits"
        target-field: "customerTierBenefits"
      - source-field: "discountRate"
        target-field: "customerTierDiscountRate"

  # Product enrichment using REST API data source
  - id: "product-external-enrichment"
    name: "Product Enrichment from REST API"
    type: "lookup-enrichment"
    target-type: "Order"
    enabled: true
    priority: 300
    condition: "#order.productId != null"
    lookup-config:
      data-source: "product-catalog-source"
      lookup-key: "#order.productId"
      endpoint: "product-lookup"
      path-parameters:
        productId: "#order.productId"
    field-mappings:
      - source-field: "name"
        target-field: "productName"
      - source-field: "category"
        target-field: "productCategory"
      - source-field: "price"
        target-field: "productPrice"
      - source-field: "available"
        target-field: "productAvailable"
      - source-field: "description"
        target-field: "productDescription"

  # Geographic enrichment using database data source
  - id: "geographic-external-enrichment"
    name: "Geographic Enrichment from Database"
    type: "lookup-enrichment"
    target-type: "Address"
    enabled: true
    priority: 400
    condition: "#address.countryCode != null"
    lookup-config:
      data-source: "geographic-data-source"
      lookup-key: "#address.countryCode"
      query: "country-lookup"
      parameters:
        - "#address.countryCode"
    field-mappings:
      - source-field: "name"
        target-field: "countryName"
      - source-field: "region"
        target-field: "countryRegion"
      - source-field: "timezone"
        target-field: "countryTimezone"
      - source-field: "currency"
        target-field: "countryCurrency"

# Validation Rules
rules:
  # Validate currency data from external source
  - id: "validate-external-currency"
    name: "Validate External Currency Data"
    condition: "#currencyActive == true && #currencyTradeable == true"
    message: "Currency must be active and tradeable"
    severity: "ERROR"
    depends-on: ["currency-external-enrichment"]

  # Validate customer tier from file system
  - id: "validate-external-customer-tier"
    name: "Validate External Customer Tier"
    condition: "#customerTierName != null && #customerTierMinBalance != null"
    message: "Customer tier data must be complete"
    severity: "ERROR"
    depends-on: ["customer-tier-external-enrichment"]

  # Validate product data from REST API
  - id: "validate-external-product"
    name: "Validate External Product Data"
    condition: "#productAvailable == true && #productPrice != null && #productPrice > 0"
    message: "Product must be available with valid price"
    severity: "ERROR"
    depends-on: ["product-external-enrichment"]

  # Validate geographic data from database
  - id: "validate-external-geographic"
    name: "Validate External Geographic Data"
    condition: "#countryName != null && #countryRegion != null"
    message: "Geographic data must include country name and region"
    severity: "WARNING"
    depends-on: ["geographic-external-enrichment"]

# Rule Groups for organized execution
ruleGroups:
  - name: "external-data-enrichment"
    description: "Complete external data enrichment workflow"
    enabled: true
    rules:
      - "currency-external-enrichment"
      - "customer-tier-external-enrichment"
      - "product-external-enrichment"
      - "geographic-external-enrichment"
      - "validate-external-currency"
      - "validate-external-customer-tier"
      - "validate-external-product"
      - "validate-external-geographic"

# Environment-specific configurations
environments:
  development:
    dataSources:
      - name: "currency-reference-source"
        cache:
          ttlSeconds: 300  # 5 minutes for faster testing
      - name: "product-catalog-source"
        connection:
          url: "https://api.dev.apex.com"
  
  staging:
    dataSources:
      - name: "product-catalog-source"
        connection:
          url: "https://api.staging.apex.com"
  
  production:
    dataSources:
      - name: "currency-reference-source"
        cache:
          ttlSeconds: 14400  # 4 hours in production
          maxSize: 2000
      - name: "product-catalog-source"
        connection:
          url: "https://api.prod.apex.com"
        cache:
          ttlSeconds: 3600  # 1 hour in production
          maxSize: 5000
