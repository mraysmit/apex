# ============================================================================
# APEX Rules Engine - Processing Configuration Demo
# ============================================================================
#
# This configuration demonstrates advanced processing features including
# parallel execution, retry logic, error handling, and performance tuning.
#
# COVERAGE: This example covers the following APEX YAML keywords:
# - parallel, timeout, retry-count, retry-on-failure, error-code
# - include-context, processing, logging, performance
#
# ============================================================================

metadata:
  name: "Processing Configuration Demo"
  version: "1.0.0"
  description: "Comprehensive demonstration of processing configuration options"
  type: "rule-config"
  author: "APEX Demo Team"
  created: "2025-08-24"
  tags: ["processing", "parallel", "retry", "error-handling", "performance"]

# Processing configuration
processing:
  # Parallel execution settings
  parallel: true
  maxThreads: 8
  threadPoolSize: 16
  queueCapacity: 1000
  
  # Timeout settings
  timeout: 30000  # 30 seconds default timeout
  ruleTimeout: 5000  # 5 seconds per rule
  enrichmentTimeout: 10000  # 10 seconds per enrichment
  
  # Retry configuration
  retry-count: 3
  retryDelay: 1000  # 1 second initial delay
  retryBackoffMultiplier: 2.0
  maxRetryDelay: 10000  # Maximum 10 seconds between retries
  
  # Error handling
  continueOnError: true
  maxErrors: 10
  errorHandling: "log-and-continue"
  failFast: false

# Logging configuration
logging:
  level: "INFO"
  include-context: true
  includeStackTrace: true
  logSlowOperations: true
  slowOperationThreshold: 1000  # Log operations slower than 1 second
  
  # Structured logging
  structured: true
  includeTimestamp: true
  includeThreadName: true
  includeRuleName: true
  
  # Log categories
  categories:
    rules: "DEBUG"
    enrichments: "INFO"
    performance: "WARN"
    errors: "ERROR"

# Performance configuration
performance:
  cache-enabled: true
  cache-ttl: 3600  # 1 hour
  cacheMaxSize: 10000
  
  # Expression compilation caching
  compileExpressions: true
  expressionCacheSize: 1000
  
  # Metrics collection
  metricsEnabled: true
  metricsInterval: 60000  # 1 minute
  
  # Memory management
  gcHints: true
  maxMemoryUsage: "512MB"

# Rules with advanced error handling
rules:
  - id: "trade-validation-with-retry"
    name: "TradeB Validation with Retry Logic"
    condition: "#data.tradeId != null && #data.tradeId.trim().length() > 0"
    message: "TradeB ID is required and cannot be empty"
    severity: "ERROR"
    priority: 1
    
    # Advanced error handling
    error-code: "TRADE_ID_REQUIRED"
    retry-on-failure: true
    maxRetries: 2
    retryDelay: 500
    
    # Timeout for this specific rule
    timeout: 2000

  - id: "complex-validation-parallel"
    name: "Complex Validation with Parallel Processing"
    condition: |
      #data.instrumentId != null && 
      #data.instrumentId.matches('^[A-Z]{2}[A-Z0-9]{9}[0-9]$') &&
      #data.quantity != null && #data.quantity > 0 &&
      #data.price != null && #data.price > 0
    message: "Complex validation failed - check ISIN format, quantity and price"
    severity: "ERROR"
    priority: 2
    
    # Processing configuration for this rule
    parallel: true
    timeout: 5000
    error-code: "COMPLEX_VALIDATION_FAILED"
    retry-on-failure: false  # Don't retry validation failures
    
    # Custom error handling
    onError: "continue"
    errorContext: true

  - id: "performance-sensitive-rule"
    name: "Performance Sensitive Rule"
    condition: "#data.portfolioValue > 1000000"  # $1M threshold
    message: "High value portfolio requires additional checks"
    severity: "WARNING"
    priority: 3
    
    # Performance tuning
    timeout: 1000  # Fast timeout for simple rule
    cacheResult: true
    cacheTtl: 300  # Cache result for 5 minutes

# Enrichments with processing configuration
enrichments:
  - id: "parallel-enrichment"
    type: "calculation-enrichment"
    condition: "#data.quantity != null && #data.price != null"
    
    # Processing settings
    parallel: true
    timeout: 8000
    retry-on-failure: true
    retry-count: 2
    error-code: "CALCULATION_FAILED"
    
    calculations:
      - field: "tradeValue"
        expression: "#data.quantity * #data.price"
        timeout: 1000
        
      - field: "commission"
        expression: "#tradeValue * 0.001"  # 0.1% commission
        timeout: 500
        
      - field: "netAmount"
        expression: "#tradeValue + #commission"
        timeout: 500

  - id: "external-lookup-with-retry"
    type: "lookup-enrichment"
    condition: "#data.counterpartyName != null"
    
    # Retry configuration for external lookups
    retry-on-failure: true
    retry-count: 3
    retryDelay: 2000
    timeout: 15000  # Longer timeout for external calls
    error-code: "LOOKUP_FAILED"
    
    lookup-config:
      lookup-key: "counterpartyName"
      lookup-dataset:
        type: "external"
        source: "counterparty-service"
        endpoint: "/api/counterparties"
        timeout: 10000
        
        # Caching for external data
        cache:
          enabled: true
          ttlSeconds: 1800  # 30 minutes
          maxSize: 5000
    
    field-mappings:
      - source-field: "lei"
        target-field: "counterparty.lei"
        required: true
        
      - source-field: "creditRating"
        target-field: "counterparty.creditRating"
        required: false
        defaultValue: "UNRATED"

# Error handling configuration
errorHandling:
  # Global error handling strategy
  strategy: "continue-on-error"
  maxErrorsPerRule: 5
  maxTotalErrors: 50
  
  # Error categorization
  errorCategories:
    validation: "ERROR"
    calculation: "WARNING"
    lookup: "INFO"
    timeout: "ERROR"
  
  # Error reporting
  reporting:
    enabled: true
    includeStackTrace: false
    includeContext: true
    maxErrorMessageLength: 500
  
  # Error recovery
  recovery:
    enabled: true
    retryFailedRules: true
    skipFailedEnrichments: false

# Monitoring configuration
monitoring:
  enabled: true
  
  # Performance metrics
  performance:
    enabled: true
    collectExecutionTimes: true
    collectMemoryUsage: true
    collectThreadUsage: true
    
  # Health checks
  healthChecks:
    enabled: true
    interval: 30000  # 30 seconds
    timeout: 5000
    
  # Alerting
  alerts:
    enabled: true
    errorThreshold: 10  # Alert after 10 errors
    performanceThreshold: 5000  # Alert if processing takes > 5 seconds
    memoryThreshold: "80%"  # Alert at 80% memory usage
