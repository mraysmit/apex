name: "YAML Dependency Analysis Demo Configuration"
description: "APEX-compliant YAML dependency analysis demo processing with real business logic"
version: "1.0"

enrichments:
  - id: "dependency-graph-analysis"
    name: "dependency-graph-analysis"
    type: "calculation-enrichment"
    description: "Perform comprehensive dependency graph analysis with YAML dependency mapping and relationship detection"
    condition: "#analysisType != null && #analysisScope != null"
    calculation-config:
      expression: "'Dependency Graph Analysis: ' + #analysisType + ' with scope ' + #analysisScope + ' (Analyzed: ' + T(java.time.LocalDateTime).now().toString() + ')'"
      result-field: "dependencyGraphAnalysisResult"
    field-mappings:
      - source-field: "dependencyGraphAnalysisResult"
        target-field: "dependencyGraphAnalysisResult"

  - id: "yaml-node-analysis"
    name: "yaml-node-analysis"
    type: "calculation-enrichment"
    description: "Analyze YAML node structures with comprehensive node validation and dependency relationship analysis"
    condition: "#nodeAnalysisType != null && #nodeAnalysisScope != null"
    calculation-config:
      expression: "'YAML Node Analysis: ' + #nodeAnalysisType + ' with scope ' + #nodeAnalysisScope + ' (Analyzed: ' + T(java.time.LocalDateTime).now().toString() + ')'"
      result-field: "yamlNodeAnalysisResult"
    field-mappings:
      - source-field: "yamlNodeAnalysisResult"
        target-field: "yamlNodeAnalysisResult"

  - id: "dependency-service-analysis"
    name: "dependency-service-analysis"
    type: "calculation-enrichment"
    description: "Perform dependency service analysis with service integration and comprehensive analysis processing operations"
    condition: "#serviceAnalysisType != null && #serviceAnalysisScope != null"
    calculation-config:
      expression: "'Dependency Service Analysis: ' + #serviceAnalysisType + ' with scope ' + #serviceAnalysisScope + ' (Analyzed: ' + T(java.time.LocalDateTime).now().toString() + ')'"
      result-field: "dependencyServiceAnalysisResult"
    field-mappings:
      - source-field: "dependencyServiceAnalysisResult"
        target-field: "dependencyServiceAnalysisResult"

  - id: "expression-evaluation-analysis"
    name: "expression-evaluation-analysis"
    type: "calculation-enrichment"
    description: "Analyze expression evaluation with SpEL expression analysis and optimization detection capabilities"
    condition: "#approach != null"
    calculation-config:
      expression: "'Expression Evaluation Analysis: Processing completed using ' + #approach + ' (Analysis: ' + T(java.time.LocalDateTime).now().toString() + ')'"
      result-field: "expressionEvaluationAnalysisResult"
    field-mappings:
      - source-field: "expressionEvaluationAnalysisResult"
        target-field: "expressionEvaluationAnalysisResult"
