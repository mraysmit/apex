# External Data Source Demo Data Configuration
# Test data scenarios for ExternalDataSourceDemo.java
# NO HARDCODED SIMULATION - Real APEX data processing

metadata:
  name: "External Data Source Demo Data"
  version: "2.0"
  description: "Test data scenarios for real APEX external data source demonstration"
  author: "APEX Demo Team"
  created: "2025-08-29"

# REST API Integration Test Scenarios
rest-api-scenarios:
  - scenario: "successful-rest-api-connection"
    description: "Successful REST API connection and query execution"
    data:
      apiEndpoint: "httpbin.org"
      apiPort: 443
      queryType: "getUserById"
      userId: "123"
      integrationType: "REST_API"
    expected-results:
      connectionStatus: "CONNECTED"
      queryResult: "USER_FOUND"
      authenticationStatus: "AUTHENTICATED"
      integration-type: "REST_API"
      complexity: "MEDIUM"
      api-operations: 3

  - scenario: "rest-api-get-all-users"
    description: "REST API get all users query"
    data:
      apiEndpoint: "httpbin.org"
      apiPort: 443
      queryType: "getAllUsers"
      integrationType: "REST_API"
    expected-results:
      connectionStatus: "CONNECTED"
      queryResult: "QUERY_EXECUTED"
      authenticationStatus: "AUTHENTICATED"
      integration-type: "REST_API"

  - scenario: "rest-api-different-endpoint"
    description: "REST API with different endpoint"
    data:
      apiEndpoint: "api.example.com"
      apiPort: 80
      queryType: "getUserById"
      userId: "456"
      integrationType: "REST_API"
    expected-results:
      connectionStatus: "CONNECTED"
      queryResult: "USER_FOUND"
      authenticationStatus: null
      integration-type: "REST_API"

# CSV File Integration Test Scenarios
csv-file-scenarios:
  - scenario: "engineering-department-query"
    description: "CSV file query for Engineering department"
    data:
      fileName: "users.csv"
      fileType: "CSV"
      queryType: "findByDepartment"
      department: "Engineering"
      integrationType: "CSV_FILE"
    expected-results:
      fileAccessible: true
      queryResults: "ENGINEERING_USERS_FOUND"
      parsingStatus: "PARSED_SUCCESSFULLY"
      integration-type: "CSV_FILE"
      complexity: "LOW"
      file-operations: 3

  - scenario: "marketing-department-query"
    description: "CSV file query for Marketing department"
    data:
      fileName: "users.csv"
      fileType: "CSV"
      queryType: "findByDepartment"
      department: "Marketing"
      integrationType: "CSV_FILE"
    expected-results:
      fileAccessible: true
      queryResults: "DEPARTMENT_USERS_FOUND"
      parsingStatus: "PARSED_SUCCESSFULLY"
      integration-type: "CSV_FILE"

  - scenario: "csv-file-all-records"
    description: "CSV file query for all records"
    data:
      fileName: "employees.csv"
      fileType: "CSV"
      queryType: "getAll"
      integrationType: "CSV_FILE"
    expected-results:
      fileAccessible: true
      queryResults: "ALL_RECORDS_FOUND"
      parsingStatus: "PARSED_SUCCESSFULLY"
      integration-type: "CSV_FILE"

# JSON File Integration Test Scenarios
json-file-scenarios:
  - scenario: "laptop-product-query"
    description: "JSON file query for laptop product"
    data:
      fileName: "products.json"
      fileType: "JSON"
      queryType: "getProductById"
      productId: "LAPTOP001"
      integrationType: "JSON_FILE"
    expected-results:
      jsonFileValid: true
      productQueryResult: "LAPTOP_FOUND"
      jsonParsingStatus: "JSON_PARSED_SUCCESSFULLY"
      integration-type: "JSON_FILE"
      complexity: "MEDIUM"
      json-operations: 3

  - scenario: "desktop-product-query"
    description: "JSON file query for desktop product"
    data:
      fileName: "products.json"
      fileType: "JSON"
      queryType: "getProductById"
      productId: "DESKTOP001"
      integrationType: "JSON_FILE"
    expected-results:
      jsonFileValid: true
      productQueryResult: "PRODUCT_FOUND"
      jsonParsingStatus: "JSON_PARSED_SUCCESSFULLY"
      integration-type: "JSON_FILE"

  - scenario: "json-file-all-products"
    description: "JSON file query for all products"
    data:
      fileName: "catalog.json"
      fileType: "JSON"
      queryType: "getAllProducts"
      integrationType: "JSON_FILE"
    expected-results:
      jsonFileValid: true
      productQueryResult: "ALL_PRODUCTS_FOUND"
      jsonParsingStatus: "JSON_PARSED_SUCCESSFULLY"
      integration-type: "JSON_FILE"

# Cache Integration Test Scenarios
cache-integration-scenarios:
  - scenario: "cache-enabled-configuration"
    description: "Cache integration with enabled configuration"
    data:
      cacheEnabled: true
      cacheTtl: 300
      cacheMaxSize: 1000
      queryId: "1"
      integrationType: "CACHE_INTEGRATION"
    expected-results:
      cacheConfigured: true
      cacheTtlSet: 300
      cacheMaxSizeSet: 1000
      cacheLookupResult: "CACHE_MISS"
      cacheStorageStatus: "STORED_IN_CACHE"
      integration-type: "CACHE_INTEGRATION"
      complexity: "HIGH"
      cache-operations: 3

  - scenario: "cache-disabled-configuration"
    description: "Cache integration with disabled configuration"
    data:
      cacheEnabled: false
      queryId: "2"
      integrationType: "CACHE_INTEGRATION"
    expected-results:
      cacheConfigured: false
      cacheLookupResult: "CACHE_MISS"
      cacheStorageStatus: null
      integration-type: "CACHE_INTEGRATION"

  - scenario: "cache-large-configuration"
    description: "Cache integration with large cache configuration"
    data:
      cacheEnabled: true
      cacheTtl: 600
      cacheMaxSize: 5000
      queryId: "3"
      integrationType: "CACHE_INTEGRATION"
    expected-results:
      cacheConfigured: true
      cacheTtlSet: 600
      cacheMaxSizeSet: 5000
      cacheLookupResult: "CACHE_MISS"
      cacheStorageStatus: "STORED_IN_CACHE"
      integration-type: "CACHE_INTEGRATION"

# Health Monitoring Test Scenarios
health-monitoring-scenarios:
  - scenario: "healthy-connection-monitoring"
    description: "Health monitoring with healthy connection"
    data:
      healthCheckEnabled: true
      healthCheckInterval: 60
      connectionStatus: "CONNECTED"
      responseTime: 150
      integrationType: "HEALTH_MONITORING"
    expected-results:
      healthStatus: "HEALTHY"
      responseTimeStatus: "GOOD"
      availabilityStatus: "MONITORING_ACTIVE"
      integration-type: "HEALTH_MONITORING"
      complexity: "MEDIUM"
      monitoring-operations: 3

  - scenario: "unhealthy-connection-monitoring"
    description: "Health monitoring with unhealthy connection"
    data:
      healthCheckEnabled: true
      healthCheckInterval: 30
      connectionStatus: "DISCONNECTED"
      responseTime: 800
      integrationType: "HEALTH_MONITORING"
    expected-results:
      healthStatus: "UNHEALTHY"
      responseTimeStatus: "SLOW"
      availabilityStatus: "MONITORING_ACTIVE"
      integration-type: "HEALTH_MONITORING"

  - scenario: "acceptable-performance-monitoring"
    description: "Health monitoring with acceptable performance"
    data:
      healthCheckEnabled: true
      healthCheckInterval: 120
      connectionStatus: "CONNECTED"
      responseTime: 350
      integrationType: "HEALTH_MONITORING"
    expected-results:
      healthStatus: "HEALTHY"
      responseTimeStatus: "ACCEPTABLE"
      availabilityStatus: "MONITORING_ACTIVE"
      integration-type: "HEALTH_MONITORING"

# Error Handling and Resilience Test Scenarios
error-handling-scenarios:
  - scenario: "full-resilience-configuration"
    description: "Error handling with full resilience configuration"
    data:
      connectionTimeout: 30000
      retryAttempts: 3
      circuitBreakerEnabled: true
      fallbackEnabled: true
      integrationType: "ERROR_HANDLING"
    expected-results:
      timeoutConfigured: true
      retryMechanismEnabled: true
      circuitBreakerStatus: "CLOSED"
      fallbackStrategy: "ENABLED"
      integration-type: "ERROR_HANDLING"
      complexity: "HIGH"
      resilience-operations: 4

  - scenario: "basic-resilience-configuration"
    description: "Error handling with basic resilience configuration"
    data:
      connectionTimeout: 15000
      retryAttempts: 1
      circuitBreakerEnabled: false
      fallbackEnabled: false
      integrationType: "ERROR_HANDLING"
    expected-results:
      timeoutConfigured: true
      retryMechanismEnabled: true
      circuitBreakerStatus: null
      fallbackStrategy: null
      integration-type: "ERROR_HANDLING"

# Performance Metrics Test Scenarios
performance-metrics-scenarios:
  - scenario: "excellent-performance-metrics"
    description: "Performance metrics with excellent performance"
    data:
      metricsEnabled: true
      responseTime: 75
      throughput: 1500
      errorRate: 0.005
      integrationType: "PERFORMANCE_METRICS"
    expected-results:
      responseTimeCategory: "EXCELLENT"
      performanceScore: 95
      throughputCategory: "HIGH_THROUGHPUT"
      errorRateStatus: "ACCEPTABLE"
      integration-type: "PERFORMANCE_METRICS"
      complexity: "HIGH"
      metrics-operations: 3

  - scenario: "good-performance-metrics"
    description: "Performance metrics with good performance"
    data:
      metricsEnabled: true
      responseTime: 150
      throughput: 800
      errorRate: 0.02
      integrationType: "PERFORMANCE_METRICS"
    expected-results:
      responseTimeCategory: "GOOD"
      performanceScore: 85
      throughputCategory: "HIGH_THROUGHPUT"
      errorRateStatus: "ACCEPTABLE"
      integration-type: "PERFORMANCE_METRICS"

  - scenario: "needs-improvement-performance-metrics"
    description: "Performance metrics needing improvement"
    data:
      metricsEnabled: true
      responseTime: 400
      throughput: 300
      errorRate: 0.08
      integrationType: "PERFORMANCE_METRICS"
    expected-results:
      responseTimeCategory: "NEEDS_IMPROVEMENT"
      performanceScore: 70
      throughputCategory: "STANDARD_THROUGHPUT"
      errorRateStatus: "HIGH_ERROR_RATE"
      integration-type: "PERFORMANCE_METRICS"

# Reference Data for Validation
reference-data:
  api-endpoints:
    - "httpbin.org"
    - "api.example.com"
    - "jsonplaceholder.typicode.com"
  
  file-types:
    - "CSV"
    - "JSON"
    - "XML"
  
  query-types:
    - "getUserById"
    - "getAllUsers"
    - "findByDepartment"
    - "getProductById"
    - "getAllProducts"
    - "getAll"
  
  departments:
    - "Engineering"
    - "Marketing"
    - "Sales"
    - "HR"
    - "Finance"
  
  integration-types:
    - "REST_API"
    - "CSV_FILE"
    - "JSON_FILE"
    - "CACHE_INTEGRATION"
    - "HEALTH_MONITORING"
    - "ERROR_HANDLING"
    - "PERFORMANCE_METRICS"
