# APEX Validation Rules Configuration
# External data source configuration for validation rules processing
# Replaces embedded YAML validation rules from CommoditySwapValidationBootstrap

metadata:
  name: "Validation Rules Configuration"
  version: "1.0.0"
  description: "Data-driven validation rules configuration for commodity swap processing"
  type: "external-data-config"
  author: "apex.demo.team@company.com"
  created-date: "2024-12-24"
  tags: ["apex-demo", "validation", "commodity-bootstrap", "validation-rules"]

# Validation rules configuration by rule type
data:
  ultra-simple-validation:
    rule-type: "ultra-simple-validation"
    rule-name: "Ultra-Simple Validation Rules"
    description: "Basic field validation using ultra-simple API"
    validation-parameters:
      pattern: "conditional-chaining"
      enabled: true
      priority: 100
    validation-rules:
      trigger-rule:
        rule-id: "basic-fields-check"
        rule-name: "Basic Required Fields Validation"
        condition: "tradeId != null && counterpartyId != null && clientId != null"
        message: "Basic required fields validation"
        description: "Ensures all essential trade identifiers are present"
        severity: "error"
        
      conditional-rules:
        on-trigger:
          - rule-id: "notional-positive"
            rule-name: "Notional Amount Positive Validation"
            condition: "notionalAmount != null && notionalAmount > 0"
            message: "Notional amount must be positive"
            description: "Validates notional amount is greater than zero"
            severity: "error"
            
          - rule-id: "commodity-type-required"
            rule-name: "Commodity Type Required Validation"
            condition: "commodityType != null && commodityType.trim().length() > 0"
            message: "Commodity type is required"
            description: "Ensures commodity type is specified"
            severity: "error"
            
          - rule-id: "trade-date-valid"
            rule-name: "Trade Date Validation"
            condition: "tradeDate != null && !tradeDate.isAfter(java.time.LocalDate.now())"
            message: "Trade date must be valid and not in future"
            description: "Validates trade date is present and not future-dated"
            severity: "warning"
            
        on-no-trigger:
          - rule-id: "basic-validation-failure"
            rule-name: "Basic Validation Failure"
            condition: "true"
            message: "Basic field validation failed"
            description: "One or more required fields are missing"
            severity: "error"
    rule-settings:
      timeout-ms: 1000
      fail-fast: true
      audit-enabled: true
    
  template-business-rules:
    rule-type: "template-business-rules"
    rule-name: "Template-Based Business Rules"
    description: "Business logic validation using template-based rules"
    validation-parameters:
      pattern: "accumulative-chaining"
      enabled: true
      priority: 200
      accumulator-variable: "businessRuleScore"
    validation-rules:
      accumulation-rules:
        - rule-id: "maturity-eligibility"
          rule-name: "Maturity Eligibility Validation"
          condition: "maturityDate != null && maturityDate.isBefore(tradeDate.plusYears(5))"
          weight: 25
          message: "Trade maturity within 5 years"
          description: "Validates trade maturity is within acceptable range"
          severity: "warning"
          
        - rule-id: "currency-consistency"
          rule-name: "Currency Consistency Validation"
          condition: "notionalCurrency == paymentCurrency && paymentCurrency == settlementCurrency"
          weight: 20
          message: "All currencies must match"
          description: "Ensures currency consistency across trade fields"
          severity: "error"
          
        - rule-id: "counterparty-validation"
          rule-name: "Counterparty Validation"
          condition: "counterpartyId != null && counterpartyId.matches('^CP[0-9]{3}$')"
          weight: 15
          message: "Counterparty ID format validation"
          description: "Validates counterparty ID follows CP### format"
          severity: "error"
          
        - rule-id: "regulatory-compliance"
          rule-name: "Regulatory Compliance Validation"
          condition: "regulatoryInfo != null && regulatoryInfo.containsKey('jurisdiction')"
          weight: 30
          message: "Regulatory information required"
          description: "Ensures regulatory compliance information is present"
          severity: "error"
          
        - rule-id: "client-validation"
          rule-name: "Client Validation"
          condition: "clientId != null && clientId.matches('^CL[0-9]{4}$')"
          weight: 10
          message: "Client ID format validation"
          description: "Validates client ID follows CL#### format"
          severity: "warning"
    rule-settings:
      minimum-score: 70
      timeout-ms: 2000
      audit-enabled: true
    
  advanced-configuration:
    rule-type: "advanced-configuration"
    rule-name: "Advanced Configuration Rules"
    description: "Complex validation using advanced configuration"
    validation-parameters:
      pattern: "conditional-chaining"
      enabled: true
      priority: 300
    validation-rules:
      trigger-rule:
        rule-id: "advanced-eligibility"
        rule-name: "Advanced Eligibility Validation"
        condition: "tradeId != null && tradeId.matches('^TRS[0-9]{3}$')"
        message: "Trade ID format validation"
        description: "Validates trade ID follows TRS### format"
        severity: "error"
        
      conditional-rules:
        on-trigger:
          - rule-id: "notional-range-check"
            rule-name: "Notional Range Validation"
            condition: "notionalAmount >= 1000000 && notionalAmount <= 100000000"
            message: "Notional must be between $1M and $100M"
            description: "Validates notional amount is within acceptable range"
            severity: "error"
            
          - rule-id: "regulatory-compliance-advanced"
            rule-name: "Advanced Regulatory Compliance"
            condition: "regulatoryInfo != null && regulatoryInfo.containsKey('regime') && regulatoryInfo.get('regime') != null"
            message: "Regulatory regime information required"
            description: "Ensures specific regulatory regime is identified"
            severity: "error"
            
          - rule-id: "commodity-specification"
            rule-name: "Commodity Specification Validation"
            condition: "commoditySpecification != null && commoditySpecification.containsKey('index')"
            message: "Commodity index specification required"
            description: "Ensures commodity index is properly specified"
            severity: "error"
            
          - rule-id: "risk-assessment"
            rule-name: "Risk Assessment Validation"
            condition: "riskMetrics != null && riskMetrics.containsKey('var') && riskMetrics.get('var') != null"
            message: "Risk assessment required for large trades"
            description: "Ensures risk metrics are calculated for significant exposures"
            severity: "warning"
            
        on-no-trigger:
          - rule-id: "advanced-validation-skip"
            rule-name: "Advanced Validation Skipped"
            condition: "true"
            message: "Advanced validation not applicable"
            description: "Trade does not meet criteria for advanced validation"
            severity: "info"
    rule-settings:
      timeout-ms: 3000
      complex-validation: true
      audit-enabled: true
    
  commodity-specific-validation:
    rule-type: "commodity-specific-validation"
    rule-name: "Commodity-Specific Validation Rules"
    description: "Validation rules specific to commodity types"
    validation-parameters:
      pattern: "conditional-chaining"
      enabled: true
      priority: 250
    validation-rules:
      energy-commodities:
        - rule-id: "energy-index-validation"
          condition: "commodityType == 'ENERGY' && energyIndex != null && ['WTI', 'BRENT', 'HENRY_HUB'].contains(energyIndex)"
          message: "Valid energy index required"
          description: "Ensures energy commodity has valid index"
          severity: "error"
          
        - rule-id: "energy-delivery-validation"
          condition: "commodityType == 'ENERGY' && deliveryLocation != null"
          message: "Energy delivery location required"
          description: "Ensures delivery location is specified for energy commodities"
          severity: "warning"
          
      metals-commodities:
        - rule-id: "metals-index-validation"
          condition: "commodityType == 'METALS' && metalsIndex != null && ['COMEX_GOLD', 'COMEX_SILVER', 'LME_COPPER'].contains(metalsIndex)"
          message: "Valid metals index required"
          description: "Ensures metals commodity has valid index"
          severity: "error"
          
        - rule-id: "metals-quality-validation"
          condition: "commodityType == 'METALS' && qualitySpecification != null"
          message: "Metals quality specification required"
          description: "Ensures quality specification for metals commodities"
          severity: "warning"
          
      agricultural-commodities:
        - rule-id: "agricultural-index-validation"
          condition: "commodityType == 'AGRICULTURAL' && agriculturalIndex != null && ['CBOT_CORN', 'CBOT_WHEAT', 'CBOT_SOYBEANS'].contains(agriculturalIndex)"
          message: "Valid agricultural index required"
          description: "Ensures agricultural commodity has valid index"
          severity: "error"
          
        - rule-id: "agricultural-grade-validation"
          condition: "commodityType == 'AGRICULTURAL' && gradeSpecification != null"
          message: "Agricultural grade specification required"
          description: "Ensures grade specification for agricultural commodities"
          severity: "warning"
    rule-settings:
      commodity-specific: true
      timeout-ms: 2500
      audit-enabled: true
    
  default:
    rule-type: "default"
    rule-name: "Default Validation Rules"
    description: "Default validation processing"
    validation-rules:
      basic-validation:
        - rule-id: "default-validation"
          condition: "true"
          message: "Default validation applied"
          description: "Basic default validation"
          severity: "info"
    rule-settings:
      timeout-ms: 500

# Validation rule patterns
rule-patterns:
  conditional-chaining:
    pattern-name: "Conditional Chaining Pattern"
    description: "Execute rules based on trigger conditions"
    execution-strategy: "trigger-based"
    
  accumulative-chaining:
    pattern-name: "Accumulative Chaining Pattern"
    description: "Accumulate scores from multiple rules"
    execution-strategy: "score-based"
    
  sequential-chaining:
    pattern-name: "Sequential Chaining Pattern"
    description: "Execute rules in sequence with early termination"
    execution-strategy: "sequential"

# Quality assurance
quality-assurance:
  rule-accuracy:
    - "Validation rules must be logically correct"
    - "Conditions must be syntactically valid"
    - "Messages must be clear and actionable"
    - "Severity levels must be appropriate"
    
  performance-requirements:
    - "Rule execution must be within timeout limits"
    - "Complex rules must be optimized"
    - "Audit trails must be comprehensive"
    - "Error handling must be robust"
    
  business-alignment:
    - "Rules must reflect business requirements"
    - "Regulatory compliance must be maintained"
    - "Risk management must be appropriate"
    - "Market conventions must be respected"
