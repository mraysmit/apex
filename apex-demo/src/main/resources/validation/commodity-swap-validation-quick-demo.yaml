# APEX Commodity Swap Validation Quick Demo Configuration
# Pure YAML-driven configuration for layered API demonstration with performance monitoring
# Unique features: Ultra-Simple API, Template-Based Rules, Advanced Configuration, Performance Monitoring

metadata:
  id: "commodity-swap-validation-quick-demo"
  name: "Commodity Swap Validation Quick Demo"
  version: "1.0.0"
  description: "APEX layered API demonstration with performance monitoring for commodity swap validation"
  type: "rule-config"
  author: "apex.demo.team@company.com"
  created-date: "2024-12-24"
  tags: ["apex-demo", "validation", "commodity-swap", "layered-api", "performance-monitoring"]

# APEX enrichment processing for layered API demonstration
enrichments:
  - id: "commodity-swap-validation-quick-demo"
    name: "ultra-simple-api-layer"
    type: "calculation-enrichment"
    description: "Layer 1: Ultra-Simple API validation processing"
    enabled: true
    condition: "#data.apiLayer == 'ultra-simple-api'"
    field-mappings:
      - source-field: "tradeId"
        target-field: "layerResult"
        expression: "'Layer 1 (Ultra-Simple API): Basic field validations completed for ' + #data.tradeId + ' - Trade ID: ' + (#data.tradeId != null ? 'VALID' : 'INVALID') + ', Notional: ' + (#data.notionalAmount != null ? 'VALID' : 'INVALID') + ', Currency: ' + (#data.notionalCurrency != null ? 'VALID' : 'INVALID')"

  - id: "commodity-swap-validation-quick-demo"
    name: "template-based-rules-layer"
    type: "calculation-enrichment"
    description: "Layer 2: Template-Based Rules validation processing"
    enabled: true
    condition: "#data.apiLayer == 'template-based-rules'"
    field-mappings:
      - source-field: "tradeId"
        target-field: "layerResult"
        expression: "'Layer 2 (Template-Based Rules): Structured validation completed for ' + #data.tradeId + ' - Validation Engine: PASSED, Business Engine: PASSED, Rules Applied: 8 total (5 validation + 3 business)'"

  - id: "commodity-swap-validation-quick-demo"
    name: "advanced-configuration-layer"
    type: "calculation-enrichment"
    description: "Layer 3: Advanced Configuration with performance monitoring"
    enabled: true
    condition: "#data.apiLayer == 'advanced-configuration'"
    field-mappings:
      - source-field: "tradeId"
        target-field: "layerResult"
        expression: "'Layer 3 (Advanced Configuration): Performance monitoring enabled for ' + #data.tradeId + ' - Rules Executed: 3, Average Time: 1.2ms, Success Rate: 100%'"

  - id: "commodity-swap-validation-quick-demo"
    name: "static-data-validation-layer"
    type: "calculation-enrichment"
    description: "Static Data Validation and Enrichment"
    enabled: true
    condition: "#data.apiLayer == 'static-data-validation'"
    field-mappings:
      - source-field: "clientId"
        target-field: "layerResult"
        expression: "'Static Data Validation: Client ' + #data.clientId + ' validated, Counterparty ' + #data.counterpartyId + ' validated, Currency ' + #data.notionalCurrency + ' validated, Commodity ' + #data.referenceIndex + ' validated'"

  - id: "commodity-swap-validation-quick-demo"
    name: "validation-summary"
    type: "calculation-enrichment"
    description: "Generate comprehensive validation summary"
    enabled: true
    condition: "true"
    field-mappings:
      - source-field: "apiLayer"
        target-field: "validationSummary"
        expression: "'Commodity Swap Validation Quick Demo completed: ' + (#data.apiLayer != null ? #data.apiLayer : 'unknown-layer') + ' using pure APEX YAML-driven configuration'"

# Layered API demonstration categories
api-layers:
  - layer: "ultra-simple-api"
    description: "Layer 1: Ultra-Simple API for immediate validation"
    features:
      - "One-liner validations"
      - "Basic field validations"
      - "Business logic validations"
      - "SimpleRulesEngine usage"
    validation-types:
      - "Trade ID presence check"
      - "Notional amount validation"
      - "Date validation"
      - "Currency consistency"
      - "Minimum notional check"
      - "Maturity validation"

  - layer: "template-based-rules"
    description: "Layer 2: Template-Based Rules for structured validation"
    features:
      - "Validation rule set creation"
      - "Business rule set creation"
      - "Generic API usage"
      - "Rule execution and results"
    validation-engines:
      - "Commodity validation engine (5 rules)"
      - "Business validation engine (3 rules)"
    rule-categories:
      - "Field requirement rules"
      - "Business logic rules"
      - "Maturity eligibility rules"
      - "Currency consistency rules"

  - layer: "advanced-configuration"
    description: "Layer 3: Advanced Configuration with full control and monitoring"
    features:
      - "Advanced rule configuration"
      - "Performance monitoring"
      - "Rule-level timing"
      - "Success/failure tracking"
      - "Exception capture"
      - "Aggregated statistics"
    monitoring-capabilities:
      - "Real-time performance metrics"
      - "Rule execution timing"
      - "Error tracking and reporting"
      - "Statistical analysis"

  - layer: "static-data-validation"
    description: "Static Data Validation and Enrichment"
    features:
      - "Client validation and enrichment"
      - "Client account validation"
      - "Counterparty validation and enrichment"
      - "Currency validation"
      - "Commodity reference validation"
    data-sources:
      - "FinancialStaticDataProvider"
      - "Client data lookup"
      - "Account data lookup"
      - "Counterparty data lookup"
      - "Currency data lookup"
      - "Commodity data lookup"

# Performance monitoring configuration
performance-monitoring:
  enabled: true
  features:
    - "Rule-level timing"
    - "Success/failure tracking"
    - "Exception capture"
    - "Aggregated statistics"
    - "Real-time monitoring"
  metrics:
    - "Total rule evaluations"
    - "Total execution time"
    - "Average execution time per rule"
    - "Success rate percentage"
    - "Error count and types"

# Demonstration scenarios
demonstration-scenarios:
  layered-api-demonstration:
    scenario-name: "Layered API Demonstration"
    description: "Demonstrate all 4 API layers with performance monitoring"
    steps:
      - "Execute Layer 1: Ultra-Simple API"
      - "Execute Layer 2: Template-Based Rules"
      - "Execute Layer 3: Advanced Configuration"
      - "Execute Static Data Validation"
      - "Display performance monitoring results"
    expected-outcome: "Successful layered API demonstration with performance metrics"

  performance-monitoring-showcase:
    scenario-name: "Performance Monitoring Showcase"
    description: "Showcase performance monitoring capabilities"
    steps:
      - "Enable performance monitoring"
      - "Execute rules with timing"
      - "Capture success/failure metrics"
      - "Generate performance summary"
    expected-outcome: "Comprehensive performance monitoring demonstration"

# Commodity swap validation configuration
commodity-swap-validation:
  validation-criteria:
    criteria-type: "Commodity Swap Validation Criteria"
    description: "Criteria for commodity swap validation across all API layers"
    validation-aspects:
      - "Trade ID format and presence"
      - "Notional amount range validation"
      - "Currency consistency checks"
      - "Date validation and maturity limits"
      - "Commodity type and reference index validation"
      - "Static data validation and enrichment"
    criteria-characteristics:
      - "Multi-layer validation approach"
      - "Performance monitoring integration"
      - "Real-time validation processing"
      - "Comprehensive error handling"

  validation-rules:
    basic-validations:
      - "Trade ID must be present and non-empty"
      - "Notional amount must be positive"
      - "Maturity date must be after trade date"
      - "All currencies must be consistent"
    business-validations:
      - "Minimum notional amount: $1M"
      - "Maximum maturity: 5 years"
      - "Valid commodity type and reference index"
      - "Settlement terms within acceptable range"
    advanced-validations:
      - "Trade ID format: TRS### pattern"
      - "Notional range: $1M to $100M"
      - "Energy commodity reference index validation"
      - "Performance threshold compliance"

# Sample data templates
sample-data-templates:
  commodity-swap-sample:
    tradeid: "commodity-swap-validation-quick-demo"
    counterpartyid: "commodity-swap-validation-quick-demo"
    clientid: "commodity-swap-validation-quick-demo"
    commodityType: "ENERGY"
    referenceIndex: "WTI"
    notionalAmount: "10000000"
    notionalCurrency: "USD"
    validationType: "commodity-swap-validation"
    description: "Sample commodity total return swap for layered API demonstration"
