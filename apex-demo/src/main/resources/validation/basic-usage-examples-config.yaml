# Basic Usage Examples Configuration
# Real APEX YAML configuration for BasicUsageExamples.java
# NO HARDCODED SIMULATION - Uses authentic APEX services

metadata:
  name: "Basic Usage Examples Configuration"
  version: "2.0"
  description: "Real APEX basic usage demonstration with field validations, business object processing, and expression evaluation"
  author: "APEX Demo Team"
  created: "2025-01-29"

# Basic Validation Enrichments
enrichments:
  - name: "basic-field-validation"
    type: "validation-enrichment"
    description: "Basic field validation using real APEX processing"
    conditions:
      - condition: "#data.name != null || #data.age != null || #data.email != null"
        actions:
          - type: "field-validation"
            validations:
              - field: "name"
                rules:
                  - condition: "#value != null && #value.length() > 0"
                    message: "Name is required"
                    severity: "ERROR"
                  - condition: "#value != null && #value.length() >= 2"
                    message: "Name must be at least 2 characters"
                    severity: "WARNING"
              - field: "age"
                rules:
                  - condition: "#value != null && #value >= 18 && #value <= 120"
                    message: "Age must be between 18 and 120"
                    severity: "ERROR"
                  - condition: "#value != null && #value >= 21"
                    message: "Age verification for premium services"
                    severity: "INFO"
              - field: "email"
                rules:
                  - condition: "#value != null && #value.contains('@')"
                    message: "Email must contain @ symbol"
                    severity: "ERROR"
                  - condition: "#value != null && #value.matches('.*@.*\\..+')"
                    message: "Email must be valid format"
                    severity: "WARNING"

  - name: "business-object-processing"
    type: "business-enrichment"
    description: "Business object processing with real APEX services"
    conditions:
      - condition: "#data.customerType != null || #data.productCategory != null || #data.tradeValue != null"
        actions:
          - type: "business-processing"
            rules:
              - condition: "#data.customerType == 'PREMIUM'"
                action:
                  type: "set-field"
                  field: "customerBenefits"
                  value: "PREMIUM_BENEFITS"
              - condition: "#data.productCategory == 'ELECTRONICS'"
                action:
                  type: "set-field"
                  field: "productWarranty"
                  value: "EXTENDED_WARRANTY"
              - condition: "#data.tradeValue != null && #data.tradeValue > 5000"
                action:
                  type: "set-field"
                  field: "tradeClassification"
                  value: "HIGH_VALUE_TRADE"
              - condition: "#data.membershipLevel == 'GOLD'"
                action:
                  type: "set-field"
                  field: "membershipBenefits"
                  value: "GOLD_MEMBER_PERKS"

  - name: "expression-evaluation"
    type: "expression-enrichment"
    description: "Expression evaluation using real APEX SpEL processing"
    conditions:
      - condition: "#data.amount != null || #data.rate != null || #data.quantity != null || #data.price != null"
        actions:
          - type: "expression-processing"
            expressions:
              - name: "calculateInterest"
                condition: "#data.amount != null && #data.rate != null"
                expression: "#data.amount * #data.rate"
                target: "calculatedInterest"
              - name: "calculateTotal"
                condition: "#data.quantity != null && #data.price != null"
                expression: "#data.quantity * #data.price"
                target: "totalValue"
              - name: "calculateDiscount"
                condition: "#data.amount != null && #data.amount > 1000"
                expression: "#data.amount * 0.1"
                target: "discountAmount"
              - name: "calculateTax"
                condition: "#data.totalValue != null"
                expression: "#data.totalValue * 0.08"
                target: "taxAmount"
              - name: "calculateFinalAmount"
                condition: "#data.totalValue != null && #data.taxAmount != null"
                expression: "#data.totalValue + #data.taxAmount"
                target: "finalAmount"

# Validation Rules Configuration
validation-rules:
  - name: "required-field-validation"
    description: "Required field validation patterns"
    rules:
      - field: "name"
        required: true
        min-length: 2
        max-length: 100
      - field: "age"
        required: false
        min-value: 18
        max-value: 120
      - field: "email"
        required: false
        pattern: "^[A-Za-z0-9+_.-]+@(.+)$"

  - name: "business-validation"
    description: "Business object validation patterns"
    rules:
      - field: "customerType"
        allowed-values: ["STANDARD", "PREMIUM", "VIP"]
      - field: "productCategory"
        allowed-values: ["ELECTRONICS", "CLOTHING", "BOOKS", "HOME"]
      - field: "tradeValue"
        min-value: 0
        max-value: 1000000
      - field: "membershipLevel"
        allowed-values: ["BRONZE", "SILVER", "GOLD", "PLATINUM"]

  - name: "expression-validation"
    description: "Expression evaluation validation patterns"
    rules:
      - field: "amount"
        type: "numeric"
        min-value: 0
      - field: "rate"
        type: "numeric"
        min-value: 0
        max-value: 1
      - field: "quantity"
        type: "integer"
        min-value: 1
      - field: "price"
        type: "numeric"
        min-value: 0

# Processing Configuration
processing:
  fail-fast: true
  enable-logging: true
  max-processing-time: 30000
  validation-enabled: true
  expression-cache-enabled: true
  
# Output Configuration
output:
  format: "json"
  include-metadata: true
  include-processing-time: true
  include-validation-results: true
  include-expression-results: true

# Performance Configuration
performance:
  enable-timing: true
  log-slow-operations: true
  slow-operation-threshold: 100
  cache-validation-results: true
  cache-expression-results: true

# Error Handling Configuration
error-handling:
  validation-errors: "collect"
  expression-errors: "fail-fast"
  missing-field-errors: "warn"
  type-conversion-errors: "fail"
