# APEX Integrated Trade Validator Demo Configuration
# Real APEX YAML configuration for integrated trade validation processing
# Replaces all hardcoded trade validation logic from IntegratedTradeValidatorDemo (@version 1.0)

metadata:
  name: "Integrated Trade Validator Demo"
  version: "1.0.0"
  description: "APEX-compliant integrated trade validation with real enrichment services"
  type: "rule-config"
  author: "apex.demo.team@company.com"
  created-date: "2024-12-24"
  tags: ["apex-demo", "validation", "trade-validator"]

# External data source for integrated trade validation configurations
external-data-sources:
  - name: "trade-validation-parameters-config"
    type: "external-data-config"
    source: "validation/trade-validation-simple/trade-validation-parameters-config.yaml"
    
  - name: "trade-samples-simple-config"
    type: "external-data-config"
    source: "validation/trade-validation-simple/trade-samples-simple-config.yaml"
    
  - name: "validation-rules-simple-config"
    type: "external-data-config"
    source: "validation/trade-validation-simple/validation-rules-simple-config.yaml"

# APEX enrichment processing for integrated trade validation
enrichments:
  - id: "trade-parameter-validation"
    name: "trade-parameter-validation"
    type: "field-enrichment"
    description: "Validate trade parameters using data-driven configuration"
    enabled: true
    condition: "true"
    field-mappings:
      - source-field: "parameterType"
        target-field: "tradeParameterValidationResult"
        default-value: "trade-parameter-validation-processed"

  - id: "trade-sample-processing"
    name: "trade-sample-processing"
    type: "field-enrichment"
    description: "Process trade samples using data-driven configuration"
    enabled: true
    condition: "false"
    field-mappings:
      - source-field: "sampleType"
        target-field: "tradeSampleProcessingResult"
        default-value: "trade-sample-processing-processed"

  - id: "validation-rules-simple-processing"
    name: "validation-rules-simple-processing"
    type: "field-enrichment"
    description: "Process validation rules using data-driven configuration"
    enabled: true
    condition: "false"
    field-mappings:
      - source-field: "ruleType"
        target-field: "validationRulesSimpleResult"
        default-value: "validation-rules-simple-processed"

  - id: "integrated-validation-summary"
    name: "integrated-validation-summary"
    type: "field-enrichment"
    description: "Generate integrated validation summary"
    enabled: true
    condition: "true"
    field-mappings:
      - source-field: "validationType"
        target-field: "integratedValidationSummary"
        default-value: "Integrated trade validation completed using real APEX services"

# Integrated trade validation categories
validation-categories:
  - category: "trade-parameter-validation"
    description: "Trade parameter validation and verification"
    processing-type: "real-apex-enrichment"
    validation-aspects:
      - "Allowed values validation"
      - "Category verification"
      - "Parameter consistency checks"
      - "Type validation"
    
  - category: "trade-sample-processing"
    description: "Trade sample creation and processing"
    processing-type: "real-apex-enrichment"
    validation-aspects:
      - "Sample trade generation"
      - "Trade data validation"
      - "Sample completeness checking"
      - "Data integrity validation"
    
  - category: "validation-rules-simple"
    description: "Simple validation rule processing"
    processing-type: "real-apex-enrichment"
    validation-aspects:
      - "Rule group processing"
      - "Basic rule validation"
      - "Simple logic evaluation"
      - "Rule execution"

# Validation performance settings
performance-settings:
  trade-parameter-validation:
    validation-timeout: 3000
    parallel-validation: true
    cache-results: true
    
  trade-sample-processing:
    sample-processing-timeout: 2000
    batch-processing: true
    cache-results: true
    
  validation-rules-simple:
    rule-evaluation-timeout: 5000
    parallel-rule-execution: false
    rule-cache-size: 500

# Integration patterns
integration-patterns:
  equity-validation-pattern:
    pattern-name: "Equity Trade Validation"
    description: "Validation pattern for equity trades"
    parameter-types: ["equity-parameters"]
    sample-types: ["equity-trade-sample"]
    rule-types: ["equity-validation-rules"]
    
  bond-validation-pattern:
    pattern-name: "Bond Trade Validation"
    description: "Validation pattern for bond trades"
    parameter-types: ["bond-parameters"]
    sample-types: ["bond-trade-sample"]
    rule-types: ["bond-validation-rules"]
    
  generic-validation-pattern:
    pattern-name: "Generic Trade Validation"
    description: "Generic validation pattern for all trade types"
    parameter-types: ["generic-parameters"]
    sample-types: ["generic-trade-sample"]
    rule-types: ["generic-validation-rules"]

# Demonstration scenarios
demonstration-scenarios:
  basic-equity-validation:
    scenario-name: "Basic Equity Validation"
    description: "Demonstrate basic equity trade validation"
    steps:
      - "Load equity parameters"
      - "Create equity trade samples"
      - "Apply equity validation rules"
      - "Generate validation results"
    expected-outcome: "Successful equity validation"
    
  basic-bond-validation:
    scenario-name: "Basic Bond Validation"
    description: "Demonstrate basic bond trade validation"
    steps:
      - "Load bond parameters"
      - "Create bond trade samples"
      - "Apply bond validation rules"
      - "Generate validation results"
    expected-outcome: "Successful bond validation"
    
  comprehensive-validation:
    scenario-name: "Comprehensive Trade Validation"
    description: "Demonstrate comprehensive trade validation across multiple types"
    steps:
      - "Load all parameter types"
      - "Create diverse trade samples"
      - "Apply comprehensive validation rules"
      - "Generate comprehensive results"
    expected-outcome: "Successful comprehensive validation"

# Output configuration
output:
  include-input: true
  include-metadata: true
  format: "enhanced"
  validation-summary: true
  performance-metrics: true
  validation-details: true
  demonstration-results: true
