# APEX Validation Rules Simple Configuration
# External data source configuration for simple validation rules
# Replaces hardcoded validation rule logic from IntegratedTradeValidatorDemo

metadata:
  id: "Validation Rules Simple Configuration"
  name: "Validation Rules Simple Configuration"
  version: "1.0.0"
  description: "Data-driven simple validation rules configuration for integrated trade validation"
  type: "external-data-config"
  author: "apex.demo.team@company.com"
  created-date: "2024-12-24"
  tags: ["apex-demo", "validation", "trade-validation-simple", "validation-rules-simple"]

# Validation rules configuration by rule type
data:
  equity-validation-rules:
    rule-id: "RULE001"
    rule-type: "equity-validation-rules"
    description: "Simple validation rules for equity trades"
    rule-definitions:
      - rule-name: "equity-instrument-type-validation"
        expression: "#trade.instrumentType != null && #trade.instrumentType == 'Equity'"
        error-message: "Instrument type must be Equity"
        severity: "ERROR"
        rule-order: 1
      - rule-name: "equity-category-validation"
        expression: "#trade.category != null && #trade.category == 'InstrumentType'"
        error-message: "Category must be InstrumentType"
        severity: "ERROR"
        rule-order: 2
      - rule-name: "equity-ticker-validation"
        expression: "#trade.ticker != null && #trade.ticker.length() > 0"
        error-message: "Ticker is required for equity trades"
        severity: "WARNING"
        rule-order: 3
      - rule-name: "equity-exchange-validation"
        expression: "#trade.exchange != null && #trade.exchange.length() > 0"
        error-message: "Exchange is required for equity trades"
        severity: "WARNING"
        rule-order: 4
    execution-strategy: "sequential"
    stop-on-error: true
    
  bond-validation-rules:
    rule-id: "RULE002"
    rule-type: "bond-validation-rules"
    description: "Simple validation rules for bond trades"
    rule-definitions:
      - rule-name: "bond-instrument-type-validation"
        expression: "#trade.instrumentType != null && #trade.instrumentType == 'Bond'"
        error-message: "Instrument type must be Bond"
        severity: "ERROR"
        rule-order: 1
      - rule-name: "bond-category-validation"
        expression: "#trade.category != null && #trade.category == 'InstrumentType'"
        error-message: "Category must be InstrumentType"
        severity: "ERROR"
        rule-order: 2
      - rule-name: "bond-maturity-validation"
        expression: "#trade.maturityDate != null"
        error-message: "Maturity date is required for bond trades"
        severity: "ERROR"
        rule-order: 3
      - rule-name: "bond-coupon-validation"
        expression: "#trade.couponRate != null && #trade.couponRate >= 0"
        error-message: "Coupon rate must be non-negative"
        severity: "WARNING"
        rule-order: 4
    execution-strategy: "sequential"
    stop-on-error: true
    
  generic-validation-rules:
    rule-id: "RULE003"
    rule-type: "generic-validation-rules"
    description: "Generic validation rules for all trade types"
    rule-definitions:
      - rule-name: "trade-id-validation"
        expression: "#trade.tradeId != null && #trade.tradeId.length() > 0"
        error-message: "Trade ID is required"
        severity: "ERROR"
        rule-order: 1
      - rule-name: "instrument-type-not-null"
        expression: "#trade.instrumentType != null"
        error-message: "Instrument type is required"
        severity: "ERROR"
        rule-order: 2
      - rule-name: "quantity-positive"
        expression: "#trade.quantity != null && #trade.quantity > 0"
        error-message: "Quantity must be positive"
        severity: "ERROR"
        rule-order: 3
      - rule-name: "price-positive"
        expression: "#trade.price != null && #trade.price > 0"
        error-message: "Price must be positive"
        severity: "ERROR"
        rule-order: 4
      - rule-name: "amount-consistency"
        expression: "#trade.amount != null && #trade.quantity != null && #trade.price != null && Math.abs(#trade.amount - (#trade.quantity * #trade.price)) < 0.01"
        error-message: "Amount must equal quantity times price"
        severity: "WARNING"
        rule-order: 5
      - rule-name: "trade-date-validation"
        expression: "#trade.tradeDate != null"
        error-message: "Trade date is required"
        severity: "ERROR"
        rule-order: 6
      - rule-name: "settlement-date-validation"
        expression: "#trade.settlementDate != null"
        error-message: "Settlement date is required"
        severity: "ERROR"
        rule-order: 7
    execution-strategy: "sequential"
    stop-on-error: false
    
  option-validation-rules:
    rule-id: "RULE004"
    rule-type: "option-validation-rules"
    description: "Simple validation rules for option trades"
    rule-definitions:
      - rule-name: "option-instrument-type-validation"
        expression: "#trade.instrumentType != null && #trade.instrumentType == 'Option'"
        error-message: "Instrument type must be Option"
        severity: "ERROR"
        rule-order: 1
      - rule-name: "option-type-validation"
        expression: "#trade.optionType != null && (#trade.optionType == 'Call' || #trade.optionType == 'Put')"
        error-message: "Option type must be Call or Put"
        severity: "ERROR"
        rule-order: 2
      - rule-name: "strike-price-validation"
        expression: "#trade.strikePrice != null && #trade.strikePrice > 0"
        error-message: "Strike price must be positive"
        severity: "ERROR"
        rule-order: 3
      - rule-name: "underlying-asset-validation"
        expression: "#trade.underlyingAsset != null && #trade.underlyingAsset.length() > 0"
        error-message: "Underlying asset is required for options"
        severity: "ERROR"
        rule-order: 4
      - rule-name: "expiration-date-validation"
        expression: "#trade.expirationDate != null"
        error-message: "Expiration date is required for options"
        severity: "ERROR"
        rule-order: 5
    execution-strategy: "sequential"
    stop-on-error: true
    
  future-validation-rules:
    rule-id: "RULE005"
    rule-type: "future-validation-rules"
    description: "Simple validation rules for future trades"
    rule-definitions:
      - rule-name: "future-instrument-type-validation"
        expression: "#trade.instrumentType != null && #trade.instrumentType == 'Future'"
        error-message: "Instrument type must be Future"
        severity: "ERROR"
        rule-order: 1
      - rule-name: "future-type-validation"
        expression: "#trade.futureType != null && (#trade.futureType == 'Commodity' || #trade.futureType == 'Financial')"
        error-message: "Future type must be Commodity or Financial"
        severity: "ERROR"
        rule-order: 2
      - rule-name: "future-underlying-validation"
        expression: "#trade.underlyingAsset != null && #trade.underlyingAsset.length() > 0"
        error-message: "Underlying asset is required for futures"
        severity: "ERROR"
        rule-order: 3
      - rule-name: "future-expiration-validation"
        expression: "#trade.expirationDate != null"
        error-message: "Expiration date is required for futures"
        severity: "ERROR"
        rule-order: 4
    execution-strategy: "sequential"
    stop-on-error: true
    
  default:
    rule-id: "RULE000"
    rule-type: "default"
    description: "Default validation rules"
    rule-definitions:
      - rule-name: "basic-trade-validation"
        expression: "#trade != null"
        error-message: "Trade object is required"
        severity: "CRITICAL"
        rule-order: 1
    execution-strategy: "simple"
    stop-on-error: true

# Rule execution patterns
execution-patterns:
  instrument-specific-validation:
    pattern-name: "Instrument Specific Validation"
    description: "Execute validation rules specific to instrument type"
    execution-logic:
      - condition: "#trade.instrumentType == 'Equity'"
        rule-type: "equity-validation-rules"
      - condition: "#trade.instrumentType == 'Bond'"
        rule-type: "bond-validation-rules"
      - condition: "#trade.instrumentType == 'Option'"
        rule-type: "option-validation-rules"
      - condition: "#trade.instrumentType == 'Future'"
        rule-type: "future-validation-rules"
      - condition: "true"
        rule-type: "generic-validation-rules"
    
  comprehensive-validation:
    pattern-name: "Comprehensive Validation"
    description: "Execute all applicable validation rules"
    execution-logic:
      - "Execute generic validation rules first"
      - "Execute instrument-specific validation rules"
      - "Aggregate validation results"
      - "Generate comprehensive validation report"
    
  basic-validation:
    pattern-name: "Basic Validation"
    description: "Execute only essential validation rules"
    execution-logic:
      - "Execute critical validation rules only"
      - "Skip warning-level validations"
      - "Return pass/fail result"

# Rule groups
rule-groups:
  - id: "critical-rules"
    name: "Critical Validation Rules"
    description: "Rules that must pass for trade to be valid"
    severity-levels: ["CRITICAL", "ERROR"]
    stop-on-failure: true

  - id: "warning-rules"
    name: "Warning Validation Rules"
    description: "Rules that generate warnings but don't fail validation"
    severity-levels: ["WARNING"]
    stop-on-failure: false

  - id: "comprehensive-rules"
    name: "Comprehensive Validation Rules"
    description: "All validation rules for complete trade validation"
    severity-levels: ["CRITICAL", "ERROR", "WARNING", "INFO"]
    stop-on-failure: false

# Performance settings
performance-settings:
  rule-execution:
    timeout-milliseconds: 3000
    parallel-execution: false
    cache-results: true
    
  error-handling:
    continue-on-warning: true
    stop-on-error: true
    max-errors: 5
    
  monitoring:
    track-execution-time: true
    log-rule-results: false
    generate-metrics: true

# Integration specifications
integration:
  rule-engines:
    - "APEX Rules Engine"
    - "Simple Rule Processor"
    - "Custom Validation Framework"
    
  validation-contexts:
    - "Trade validation context"
    - "Parameter validation context"
    - "Business rule context"
    
  result-formats:
    - "Validation success/failure"
    - "Error message list"
    - "Validation report"
    - "Rule execution summary"
