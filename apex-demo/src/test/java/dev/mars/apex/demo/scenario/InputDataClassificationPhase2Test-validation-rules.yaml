# APEX Input Data Classification Phase 2 Test - Validation Rules
#
# PURPOSE:
# This file contains advanced validation rules for Phase 2 testing, demonstrating
# SpEL-based validation logic, complex business rule evaluation, and enhanced
# error handling capabilities.
#
# PHASE 2 FEATURES DEMONSTRATED:
# - Advanced SpEL expressions for financial data validation
# - Rich context variable usage in validation logic
# - Complex conditional validation based on instrument types
# - Enhanced error handling and graceful degradation
# - Performance-optimized validation with caching
#
# @author Mark Andrew Ray-Smith Cityline Ltd
# @version 2.0.0
# @since 2024-12-28

metadata:
  name: "Phase 2 Advanced Validation Rules"
  version: "2.0.0"
  description: "Advanced validation rules with SpEL integration for Phase 2 testing"
  type: "validation-rules"
  business-domain: "Financial Services - Advanced Validation"
  owner: "apex-development-team@company.com"
  created: "2024-12-28"
  tags: ["phase2", "validation", "spel", "advanced", "financial"]

# Phase 2 Error Recovery Configuration
# Configure proper error handling for SpEL evaluation failures
error-recovery:
  enabled: true
  log-recovery-attempts: true
  metrics-enabled: true
  default-strategy: "FAIL_FAST"  # Don't mask SpEL errors as successful recoveries

  # Severity-specific recovery policies
  severity-policies:
    # ERROR severity - No recovery, fail immediately
    ERROR:
      recovery-enabled: false
      strategy: "FAIL_FAST"

    # WARNING severity - No recovery, report as error
    WARNING:
      recovery-enabled: false
      strategy: "FAIL_FAST"

    # INFO severity - No recovery, report as error
    INFO:
      recovery-enabled: false
      strategy: "FAIL_FAST"

# Phase 2 Advanced Validation Configuration
validation-config:
  spel-enabled: true
  context-enrichment: true
  error-handling: "graceful"
  performance-monitoring: true
  caching-enabled: true

# Advanced Validation Rules with SpEL
rules:
  
  # Basic Message Structure Validation
  - id: "message-type-validation"
    name: "Message Type Validation"
    description: "Validates that messageType is present and valid using SpEL"
    condition: >
      #root.messageType != null && 
      #root.messageType.length() > 0 &&
      (#root.messageType.matches('TRADE.*') || 
       #root.messageType.matches('SETTLEMENT.*') || 
       #root.messageType.matches('POSITION.*') ||
       #root.messageType.matches('RISK.*'))
    severity: "WARNING"
    message: "Message type should be present and follow standard naming conventions"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["messageType"]
    
  # Financial Instrument Validation
  - id: "instrument-validation"
    name: "Financial Instrument Validation"
    description: "Advanced validation for financial instrument data using SpEL"
    condition: >
      #root['instrument'] != null &&
      #root['instrument']['type'] != null &&
      (#root['instrument']['type'] == 'EQUITY' ||
       #root['instrument']['type'] == 'BOND' ||
       #root['instrument']['type'] == 'DERIVATIVE' ||
       #root['instrument']['type'].toString().contains('SWAP') ||
       #root['instrument']['type'].toString().contains('OPTION') ||
       #root['instrument']['type'].toString().contains('FUTURE'))
    severity: "ERROR"
    message: "Financial instrument must have valid type classification"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["instrument"]
    
  # Derivative-Specific Validation
  - id: "derivative-validation"
    name: "Derivative Instrument Validation"
    description: "Specialized validation for derivative instruments"
    condition: >
      #root.instrument?.type == null || 
      !#root.instrument.type.contains('SWAP') && 
      !#root.instrument.type.contains('OPTION') && 
      !#root.instrument.type.contains('FUTURE') ||
      (#root.instrument.type.contains('SWAP') || 
       #root.instrument.type.contains('OPTION') || 
       #root.instrument.type.contains('FUTURE')) &&
      #root.instrument.underlying != null &&
      #root.instrument.notional != null &&
      #root.instrument.notional > 0
    severity: "WARNING"
    message: "Derivative instruments should have underlying and positive notional"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["instrument"]
    
  # Counterparty Validation
  - id: "counterparty-validation"
    name: "Counterparty Information Validation"
    description: "Validates counterparty data completeness using SpEL"
    condition: >
      #root['counterparty'] == null ||
      (#root['counterparty'] != null &&
       #root['counterparty']['name'] != null &&
       #root['counterparty']['name'].toString().length() > 0 &&
       (#root['counterparty']['lei'] != null ||
        #root['counterparty']['jurisdiction'] != null))
    severity: "WARNING"
    message: "Counterparty should have name and either LEI or jurisdiction"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["counterparty"]
    
  # Risk Metrics Validation
  - id: "risk-metrics-validation"
    name: "Risk Metrics Validation"
    description: "Validates risk metrics data using advanced SpEL expressions"
    condition: >
      #root.riskMetrics == null ||
      (#root.riskMetrics != null &&
       (#root.riskMetrics.var95 == null || #root.riskMetrics.var95 >= 0) &&
       (#root.riskMetrics.expectedShortfall == null || #root.riskMetrics.expectedShortfall >= 0) &&
       (#root.riskMetrics.creditExposure == null || #root.riskMetrics.creditExposure >= 0) &&
       (#root.riskMetrics.portfolioBeta == null || 
        (#root.riskMetrics.portfolioBeta >= -5.0 && #root.riskMetrics.portfolioBeta <= 5.0)))
    severity: "ERROR"
    message: "Risk metrics must have non-negative values and reasonable ranges"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["riskMetrics"]
    
  # Market Data Validation
  - id: "market-data-validation"
    name: "Market Data Validation"
    description: "Validates market data using SpEL with range checks"
    condition: >
      #root.marketData == null ||
      (#root.marketData != null &&
       (#root.marketData.currentRate == null || 
        (#root.marketData.currentRate >= 0 && #root.marketData.currentRate <= 100)) &&
       (#root.marketData.volatility == null || 
        (#root.marketData.volatility >= 0 && #root.marketData.volatility <= 5.0)) &&
       (#root.marketData.marketCondition == null ||
        #root.marketData.marketCondition.matches('NORMAL|VOLATILE|STRESSED|CRISIS')))
    severity: "WARNING"
    message: "Market data should have reasonable values and valid market conditions"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["marketData"]
    
  # Portfolio Validation
  - id: "portfolio-validation"
    name: "Portfolio Data Validation"
    description: "Validates portfolio structure and position data"
    condition: >
      #root.portfolio == null ||
      (#root.portfolio != null &&
       #root.portfolio.id != null &&
       #root.portfolio.totalValue != null &&
       #root.portfolio.totalValue > 0)
    severity: "ERROR"
    message: "Portfolio must have valid ID and positive total value"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["portfolio"]
    
  # Regulatory Compliance Validation
  - id: "regulatory-compliance-validation"
    name: "Regulatory Compliance Validation"
    description: "Validates regulatory compliance requirements using SpEL"
    condition: >
      (#root.instrument?.regulatoryClassification != 'OTC_DERIVATIVE') ||
      (#root.instrument?.regulatoryClassification == 'OTC_DERIVATIVE' &&
       #root.counterparty?.lei != null &&
       #root.counterparty.lei.matches('[A-Z0-9]{20}') &&
       #root.instrument.notional != null &&
       #root.instrument.notional > 0)
    severity: "ERROR"
    message: "OTC derivatives require valid counterparty LEI and positive notional"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["instrument", "counterparty"]
    
  # Data Completeness Validation
  - id: "data-completeness-validation"
    name: "Data Completeness Validation"
    description: "Validates overall data completeness using SpEL aggregation"
    condition: >
      (#root.messageType != null ? 1 : 0) +
      (#root.instrument != null ? 1 : 0) +
      (#root.counterparty != null ? 1 : 0) +
      (#root.riskMetrics != null ? 1 : 0) +
      (#root.marketData != null ? 1 : 0) >= 2
    severity: "WARNING"
    message: "Data should have at least 2 major sections populated for meaningful processing"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["messageType", "instrument", "counterparty", "riskMetrics", "marketData"]
    
  # Performance Validation
  - id: "performance-validation"
    name: "Performance Validation"
    description: "Validates that processing can be completed within performance targets"
    condition: >
      (#root.positions == null || #root.positions.size() <= 1000) &&
      (#root.riskMetrics?.complexCalculations == null || 
       #root.riskMetrics.complexCalculations != true)
    severity: "INFO"
    message: "Large datasets or complex calculations may impact performance"
    recovery-strategy: "CONTINUE_WITH_DEFAULT"
    spel-context: ["positions", "riskMetrics"]

# Advanced Error Handling Configuration
error-handling:
  spel-errors:
    strategy: "graceful-degradation"
    fallback-validation: true
    log-level: "WARN"
    retry-attempts: 2
    
  validation-failures:
    continue-on-warning: true
    continue-on-error: false
    aggregate-errors: true
    
  performance-issues:
    timeout-ms: 1000
    fallback-to-basic-validation: true

# Validation Performance Configuration
performance:
  caching:
    enabled: true
    cache-successful-validations: true
    cache-ttl-seconds: 300
    
  optimization:
    parallel-validation: false
    early-termination: true
    expression-compilation-cache: true
    
  monitoring:
    track-validation-time: true
    track-spel-evaluation-time: true
    track-cache-hit-ratio: true

# Context Enrichment for Validation
context-enrichment:
  enabled: true
  
  derived-variables:
    - name: "isDerivative"
      expression: >
        #instrument != null && 
        (#instrument.type.contains('SWAP') || 
         #instrument.type.contains('OPTION') || 
         #instrument.type.contains('FUTURE'))
    
    - name: "isHighValue"
      expression: >
        (#instrument?.notional != null && #instrument.notional > 10000000) ||
        (#portfolio?.totalValue != null && #portfolio.totalValue > 50000000)
    
    - name: "requiresRegulatory"
      expression: >
        #instrument?.regulatoryClassification == 'OTC_DERIVATIVE' ||
        (#isHighValue && #counterparty?.jurisdiction != null)
    
    - name: "dataQualityScore"
      expression: >
        (#root.messageType != null ? 0.2 : 0) +
        (#root.instrument != null ? 0.3 : 0) +
        (#root.counterparty != null ? 0.2 : 0) +
        (#root.riskMetrics != null ? 0.2 : 0) +
        (#root.marketData != null ? 0.1 : 0)
