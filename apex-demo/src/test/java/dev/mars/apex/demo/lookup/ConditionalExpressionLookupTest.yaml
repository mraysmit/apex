# Conditional Expression Lookup Example Configuration
# Demonstrates conditional expression evaluation in lookup-key with H2 database
# Use Case: Risk-based loan assessment with conditional credit score categorization

# ============================================================================
# APEX YAML Configuration File
# ============================================================================
# Used by: ConditionalExpressionLookupTest.java (Active test implementation)
# Purpose: Conditional expression lookup demonstration using APEX lookup
#          enrichments with conditional logic, expression-based lookups, and
#          dynamic lookup conditions for complex business scenarios using H2 database
# Status: ACTIVE - Integrated with conditional expression lookup tests
# ============================================================================

metadata:
  id: "conditional-expression-lookup-demo"
  name: "Conditional Expression Lookup Demo"
  version: "1.0.0"
  description: "Demonstrates conditional expression lookup using credit score-based risk categorization with H2 database"
  type: "enrichment"
  author: "apex.demo.team@company.com"
  created-date: "2024-12-24"
  tags: ["apex-demo", "lookup", "conditional", "h2-database"]

# Data source configuration using H2 database
data-sources:
  - name: "risk-assessment-database"
    type: "database"
    source-type: "h2"
    connection:
      # H2 file-based database for conditional expression lookup
      database: "./target/h2-demo/apex_demo_conditional"
      username: "sa"
      password: ""

# Define the enrichment rules
enrichments:
  - id: "conditional-expression-lookup-demo"
    name: "Risk-Based Assessment Lookup"
    description: "Enrich risk assessments with conditional credit score-based risk parameters using H2 database"
    type: "lookup-enrichment"
    enabled: true
    condition: "#creditScore != null"

    lookup-config:
      # Conditional expression - evaluates credit score and returns risk category
      lookup-key: "#creditScore >= 750 ? 'EXCELLENT' : (#creditScore >= 650 ? 'GOOD' : (#creditScore >= 550 ? 'FAIR' : 'POOR'))"

      lookup-dataset:
        type: "database"
        data-source-ref: "risk-assessment-database"
        query: "SELECT risk_level, interest_rate, max_loan_amount, approval_status, required_documents, processing_days, risk_mitigation_actions, collateral_requirement, reviewer_level FROM risk_parameters WHERE risk_category = :riskCategory"
        parameters:
          - field: "riskCategory"
            type: "string"

    # Map the lookup results to target fields (H2 returns uppercase column names)
    field-mappings:
      - source-field: "RISK_LEVEL"
        target-field: "riskLevel"
        required: false

      - source-field: "INTEREST_RATE"
        target-field: "interestRate"
        required: false

      - source-field: "MAX_LOAN_AMOUNT"
        target-field: "maxLoanAmount"
        required: false

      - source-field: "APPROVAL_STATUS"
        target-field: "approvalStatus"
        required: false

      - source-field: "REQUIRED_DOCUMENTS"
        target-field: "requiredDocuments"
        required: false

      - source-field: "PROCESSING_DAYS"
        target-field: "processingDays"
        required: false

      - source-field: "RISK_MITIGATION_ACTIONS"
        target-field: "riskMitigationActions"
        required: false

      - source-field: "COLLATERAL_REQUIREMENT"
        target-field: "collateralRequirement"
        required: false

      - source-field: "REVIEWER_LEVEL"
        target-field: "reviewerLevel"
        required: false

# Optional validation rules
validations:
  - id: "conditional-expression-lookup-demo"
    name: "Credit Score Range Validation"
    description: "Ensure credit score is within valid range"
    type: "field-validation"
    enabled: true
    condition: "#creditScore != null"
    
    validation-config:
      field: "creditScore"
      rules:
        - type: "range"
          min: 300
          max: 850
          message: "Credit score must be between 300 and 850"
          
  - id: "conditional-expression-lookup-demo"
    name: "Annual Income Validation"
    description: "Ensure annual income is positive"
    type: "field-validation"
    enabled: true
    condition: "#annualIncome != null"
    
    validation-config:
      field: "annualIncome"
      rules:
        - type: "range"
          min: 0.01
          message: "Annual income must be positive"
          
  - id: "conditional-expression-lookup-demo"
    name: "Requested Amount Validation"
    description: "Ensure requested loan amount is positive"
    type: "field-validation"
    enabled: true
    condition: "#requestedAmount != null"
    
    validation-config:
      field: "requestedAmount"
      rules:
        - type: "range"
          min: 1000.00
          max: 10000000.00
          message: "Requested amount must be between $1,000 and $10,000,000"
          
  - id: "conditional-expression-lookup-demo"
    name: "Employment Status Validation"
    description: "Ensure employment status is valid"
    type: "field-validation"
    enabled: true
    condition: "#employmentStatus != null"
    
    validation-config:
      field: "employmentStatus"
      rules:
        - type: "enum"
          allowedValues: ["FULL_TIME", "PART_TIME", "CONTRACT", "SELF_EMPLOYED", "UNEMPLOYED", "RETIRED"]
          message: "Employment status must be one of: FULL_TIME, PART_TIME, CONTRACT, SELF_EMPLOYED, UNEMPLOYED, RETIRED"
          
  - id: "conditional-expression-lookup-demo"
    name: "Years Employed Validation"
    description: "Ensure years employed is reasonable"
    type: "field-validation"
    enabled: true
    condition: "#yearsEmployed != null"
    
    validation-config:
      field: "yearsEmployed"
      rules:
        - type: "range"
          min: 0
          max: 50
          message: "Years employed must be between 0 and 50"

# Processing configuration
processing:
  continue-on-error: true
  max-errors: 5
  error-handling: "log-and-continue"

