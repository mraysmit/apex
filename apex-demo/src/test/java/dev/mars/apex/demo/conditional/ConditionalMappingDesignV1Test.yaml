# ============================================================================
# APEX YAML Configuration File
# ============================================================================
# Used by: PHASE 2 IMPLEMENTED - ConditionalMappingsTest.java validates functionality
# Purpose: Simplified approach to conditional field mapping using enhanced
#          field-enrichment syntax with conditional-mappings support
#          Reduces 12 enrichments to 1, eliminates external dependencies
# Status: PHASE 2 COMPLETE - Implemented and tested in apex-core
# ============================================================================

metadata:
  id: "conditional-mapping-design-v1"
  name: "Enhanced Conditional Field Mapping - FX Transaction"
  version: "2.0.0"
  description: "Simplified conditional field mapping for FX transactions"
  type: "scenario"
  author: "APEX Enhancement Team"
  created: "2025-09-17"

# External data-source references (simplified)
data-source-refs:
  - name: "translation-db"
    source: "src/test/java/dev/mars/apex/demo/conditional/database-h2.yaml"
    enabled: true

enrichments:
  # Currency ranking enrichment (unchanged)
  - id: "enrich-currency-ranks"
    type: "lookup-enrichment"
    condition: "#BUY_CURRENCY != null || #SELL_CURRENCY != null"
    lookup-config:
      lookup-key: "#BUY_CURRENCY"
      lookup-dataset:
        type: "database"
        data-source-ref: "translation-db"
        query-ref: "getCurrencyRank"
    field-mappings:
      - source-field: "CURRENCY_RANK"
        target-field: "BUY_CURRENCY_RANK"

  # ENHANCED: Single enrichment with conditional field mapping
  - id: "conditional-ndf-mapping"
    type: "field-enrichment"
    description: "Conditional NDF field mapping with OR conditions"
    condition: "#IS_NDF != null && #SYSTEM_CODE != null"
    
    # NEW SYNTAX: conditional-mappings with OR logic
    conditional-mappings:
      # Condition 1: Direct mapping for SWIFT system with valid NDF values
      - conditions:
          operator: "OR"  # Any condition can trigger this mapping
          rules:
            - condition: "({'0', '1'}.contains(#IS_NDF)) && (#SYSTEM_CODE == 'SWIFT')"
              description: "SWIFT system with valid NDF values"
            - condition: "#IS_NDF == 'Y' && #SYSTEM_CODE == 'SWIFT'"
              description: "SWIFT system with Y flag"
        field-mappings:
          - source-field: "IS_NDF"
            target-field: "IS_NDF"
            transformation: "#IS_NDF"  # Keep original value
            
      # Condition 2: Translation required for other cases
      - conditions:
          operator: "AND"
          rules:
            - condition: "#IS_NDF != null"
            - condition: "#SYSTEM_CODE == 'SWIFT'"
            - condition: "!({'0', '1', 'Y'}.contains(#IS_NDF))"  # NOT in valid set
        field-mappings:
          - source-field: "IS_NDF"
            target-field: "TRANSLATION_TYPE"
            transformation: "'IS_NDF'"
          - source-field: "IS_NDF"
            target-field: "EXTERNAL_CODE"
            transformation: "#IS_NDF"
          # Simple field mapping - translation will be handled by separate enrichment
          - source-field: "IS_NDF"
            target-field: "IS_NDF"
            transformation: "#IS_NDF"  # Keep original value for now
            
      # Default case: No mapping needed
      - conditions:
          operator: "OR"
          rules:
            - condition: "true"  # Always true for default case
              description: "Default case - no special mapping needed"
        field-mappings:
          - source-field: "IS_NDF"
            target-field: "IS_NDF"
            transformation: "#IS_NDF"

  # Translation enrichment for non-standard values
  - id: "translation-lookup"
    name: "translation-lookup-enrichment"
    description: "Translate non-standard values using database lookup"
    type: "lookup-enrichment"
    condition: "#TRANSLATION_TYPE != null && #EXTERNAL_CODE != null"

    lookup-config:
      lookup-key: "{'TRANSLATION_TYPE': #TRANSLATION_TYPE, 'CLIENT_CODE': #CLIENT_CODE, 'SYSTEM_CODE': #SYSTEM_CODE, 'EXTERNAL_CODE': #EXTERNAL_CODE}"
      lookup-dataset:
        type: "database"
        data-source-ref: "translation-db"
        query: "SELECT internal_code FROM translation_parameters WHERE translation_type = :TRANSLATION_TYPE AND client_code = :CLIENT_CODE AND system_code = :SYSTEM_CODE AND external_code = :EXTERNAL_CODE"
        parameters:
          - field: "TRANSLATION_TYPE"
            type: "string"
          - field: "CLIENT_CODE"
            type: "string"
          - field: "SYSTEM_CODE"
            type: "string"
          - field: "EXTERNAL_CODE"
            type: "string"

    field-mappings:
      - source-field: "INTERNAL_CODE"
        target-field: "IS_NDF"
