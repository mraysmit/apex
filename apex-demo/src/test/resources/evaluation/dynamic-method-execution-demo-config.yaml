

# ============================================================================
# APEX YAML Configuration File
# ============================================================================
# Used by: DynamicMethodExecutionDemoTest.java (testDynamicMethodExecution, testDynamicMethodExecutionWithComplexData methods)
# Purpose: Dynamic method execution demonstration using APEX evaluation capabilities
#          for testing dynamic method invocation, expression evaluation, and
#          runtime method execution with complex business logic
# ============================================================================

metadata:
  id: "dynamic-method-execution-demo-config"
  name: "Dynamic Method Execution Demo Configuration"
  version: "2.0.0"
  description: "APEX-compliant dynamic method execution processing with real enrichment services"
  type: "rule-config"
  author: "apex.demo.team@company.com"
  created-date: "2024-12-24"
  business-domain: "Dynamic Method Execution"
  tags: ["dynamic-method-execution", "demo", "enrichment", "settlement", "risk", "pricing", "compliance"]

# APEX enrichment processing for dynamic method execution operations (8 enrichments total)
enrichments:
  - id: "settlement-processing-enrichment"
    name: "settlement-processing"
    type: "calculation-enrichment"
    description: "Processes settlement operations for different trade types"
    condition: "#tradeType != null"
    calculation-config:
      expression: "#tradeType == 'Equity' ? 'T+2' : (#tradeType == 'FixedIncome' ? 'T+1' : (#tradeType == 'Derivative' ? 'T+1' : (#tradeType == 'Forex' ? 'T+0' : 'T+3')))"
      result-field: "settlementDays"
    field-mappings:
      - source-field: "settlementDays"
        target-field: "settlementDays"

  - id: "settlement-method-enrichment"
    name: "settlement-method"
    type: "calculation-enrichment"
    description: "Generates settlement method description"
    condition: "#tradeType != null"
    calculation-config:
      expression: "'Settlement method for ' + #tradeType + ' trades'"
      result-field: "settlementMethod"
    field-mappings:
      - source-field: "settlementMethod"
        target-field: "settlementMethod"
        
  - id: "risk-management-enrichment"
    name: "risk-management"
    type: "calculation-enrichment"
    description: "Processes risk management for different trade types"
    condition: "#tradeType != null"
    calculation-config:
      expression: "#tradeType == 'Derivative' ? 'HIGH' : (#tradeType == 'Forex' ? 'MEDIUM' : 'LOW')"
      result-field: "marketRisk"
    field-mappings:
      - source-field: "marketRisk"
        target-field: "marketRisk"

  - id: "credit-risk-enrichment"
    name: "credit-risk"
    type: "calculation-enrichment"
    description: "Generates credit risk assessment description"
    condition: "#tradeType != null"
    calculation-config:
      expression: "'Credit risk assessment for ' + #tradeType + ' trades'"
      result-field: "creditRisk"
    field-mappings:
      - source-field: "creditRisk"
        target-field: "creditRisk"
        
  - id: "pricing-service-enrichment"
    name: "pricing-service"
    type: "calculation-enrichment"
    description: "Processes pricing operations with different pricing types"
    condition: "#basePrice != null && #pricingType != null"
    calculation-config:
      expression: "#pricingType == 'premium' ? (#basePrice * 1.15) : (#pricingType == 'sale' ? (#basePrice * 0.85) : (#pricingType == 'clearance' ? (#basePrice * 0.70) : #basePrice))"
      result-field: "calculatedPrice"
    field-mappings:
      - source-field: "calculatedPrice"
        target-field: "calculatedPrice"

  - id: "pricing-description-enrichment"
    name: "pricing-description"
    type: "calculation-enrichment"
    description: "Generates pricing description with details"
    condition: "#basePrice != null && #pricingType != null"
    calculation-config:
      expression: "'Calculated price: $' + (#pricingType == 'premium' ? (#basePrice * 1.15) : (#pricingType == 'sale' ? (#basePrice * 0.85) : (#pricingType == 'clearance' ? (#basePrice * 0.70) : #basePrice))) + ' (' + #pricingType + ' pricing from base $' + #basePrice + ')'"
      result-field: "pricingDescription"
    field-mappings:
      - source-field: "pricingDescription"
        target-field: "pricingDescription"
        
  - id: "compliance-service-enrichment"
    name: "compliance-service"
    type: "calculation-enrichment"
    description: "Processes compliance operations for different trade types"
    condition: "#tradeType != null"
    calculation-config:
      expression: "#tradeType == 'Derivative' ? 'MiFID II, EMIR, Dodd-Frank' : (#tradeType == 'Forex' ? 'MiFID II, EMIR' : (#tradeType == 'Equity' ? 'MiFID II' : 'Standard regulations'))"
      result-field: "applicableRegulations"
    field-mappings:
      - source-field: "applicableRegulations"
        target-field: "applicableRegulations"
        
  - id: "dynamic-rules-enrichment"
    name: "dynamic-rules"
    type: "calculation-enrichment"
    description: "Processes dynamic rule execution"
    condition: "#ruleName != null"
    calculation-config:
      expression: "#ruleName == 'SettlementDays' ? 'T+2 for equity trades' : (#ruleName == 'MarketRisk' ? 'HIGH risk for derivatives' : (#ruleName == 'PremiumPrice' ? 'Premium pricing applied' : 'Rule executed'))"
      result-field: "ruleResult"
    field-mappings:
      - source-field: "ruleResult"
        target-field: "ruleResult"
        
  - id: "conditional-processing-enrichment"
    name: "conditional-processing"
    type: "calculation-enrichment"
    description: "Processes conditional operations with true/false logic"
    condition: "#condition != null && #trueValue != null && #falseValue != null"
    calculation-config:
      expression: "#condition ? #trueValue : #falseValue"
      result-field: "conditionalResult"
    field-mappings:
      - source-field: "conditionalResult"
        target-field: "conditionalResult"
        
  - id: "fee-calculation-enrichment"
    name: "fee-calculation"
    type: "calculation-enrichment"
    description: "Processes fee calculations with notional values and rates"
    condition: "#notionalValue != null"
    calculation-config:
      expression: "#feeRate != null ? (#notionalValue * #feeRate) : (#notionalValue * 0.001)"
      result-field: "calculatedFee"
    field-mappings:
      - source-field: "calculatedFee"
        target-field: "calculatedFee"

  - id: "fee-description-enrichment"
    name: "fee-description"
    type: "calculation-enrichment"
    description: "Generates fee calculation description with details"
    condition: "#notionalValue != null"
    calculation-config:
      expression: "'Calculated fee: $' + (#feeRate != null ? (#notionalValue * #feeRate) : (#notionalValue * 0.001)) + ' (notional: $' + #notionalValue + ', rate: ' + (#feeRate != null ? #feeRate : '0.001 (default)') + ')'"
      result-field: "feeDescription"
    field-mappings:
      - source-field: "feeDescription"
        target-field: "feeDescription"
        
  - id: "execution-summary-enrichment"
    name: "execution-summary"
    type: "calculation-enrichment"
    description: "Generates comprehensive dynamic method execution summary"
    condition: "true"
    calculation-config:
      expression: "'Dynamic method execution completed using real APEX services with approach: ' + (#approach != null ? #approach : 'unknown')"
      result-field: "executionSummary"
    field-mappings:
      - source-field: "executionSummary"
        target-field: "executionSummary"
