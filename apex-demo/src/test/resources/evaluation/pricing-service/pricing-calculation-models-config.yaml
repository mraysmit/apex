# APEX Pricing Calculation Models Configuration
# External data source configuration for pricing calculation models
# Replaces hardcoded pricing calculation logic from PricingServiceDemo

metadata:
  id: "pricing-calculation-models-configuration"
  name: "Pricing Calculation Models Configuration"
  version: "1.0.0"
  description: "Data-driven pricing calculation models configuration for pricing service"
  type: "external-data-config"
  author: "apex.demo.team@company.com"
  created-date: "2024-12-24"
  tags: ["apex-demo", "evaluation", "pricing-service", "pricing-calculation-models"]

# Pricing calculation models configuration by model type
data:
  standard-pricing-models:
    model-type: "standard-pricing-models"
    model-name: "Standard Pricing Models"
    description: "Models for standard pricing calculations"
    model-characteristics:
      pricing-category: "STANDARD"
      calculation-method: "BASE_PRICE"
      adjustment-type: "NONE"
    calculation-models:
      base-price-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Base Price Calculation Model"
        model-description: "Standard base price calculation without adjustments"
        calculation-parameters:
          base-multiplier: 1.0
          adjustment-factor: 0.0
          minimum-price: 0.01
          maximum-price: 999999.99
        calculation-rules:
          - rule-name: "base-price-validation"
            rule-condition: "#basePrice > 0"
            rule-description: "Base price must be positive"
            rule-action: "VALIDATE"
          - rule-name: "base-price-normalization"
            rule-condition: "true"
            rule-calculation: "T(java.math.BigDecimal).valueOf(#basePrice).setScale(2, T(java.math.RoundingMode).HALF_UP).doubleValue()"
            rule-description: "Normalize base price to 2 decimal places"
            rule-action: "NORMALIZE"
          - rule-name: "standard-price-calculation"
            rule-condition: "true"
            rule-calculation: "#basePrice * 1.0"
            rule-description: "Calculate standard price (no adjustment)"
            rule-action: "CALCULATE"
        validation-requirements:
          - "Base price must be positive"
          - "Result must be normalized to 2 decimal places"
          - "Price must be within acceptable range"
        audit-requirements:
          - "Log standard price calculation"
          - "Track base price validation"
          
      standard-price-range-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Standard Price Range Model"
        model-description: "Standard pricing with range validation"
        calculation-parameters:
          base-multiplier: 1.0
          adjustment-factor: 0.0
          minimum-price: 1.0
          maximum-price: 50000.0
        calculation-rules:
          - rule-name: "price-range-validation"
            rule-condition: "#basePrice >= 1.0 && #basePrice <= 50000.0"
            rule-description: "Price must be within standard range ($1-$50,000)"
            rule-action: "VALIDATE"
          - rule-name: "standard-range-calculation"
            rule-condition: "true"
            rule-calculation: "#basePrice"
            rule-description: "Standard price within acceptable range"
            rule-action: "CALCULATE"
        validation-requirements:
          - "Price must be within standard range"
          - "Range validation must pass"
        audit-requirements:
          - "Log range validation results"
          - "Track price distribution"
    model-settings:
      calculation-precision: 2
      validation-strict: true
      normalization-required: true
    
  premium-pricing-models:
    model-type: "premium-pricing-models"
    model-name: "Premium Pricing Models"
    description: "Models for premium pricing calculations"
    model-characteristics:
      pricing-category: "PREMIUM"
      calculation-method: "MARKUP"
      adjustment-type: "PERCENTAGE_INCREASE"
    calculation-models:
      premium-markup-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Premium Markup Calculation Model"
        model-description: "Premium pricing with 20% markup"
        calculation-parameters:
          base-multiplier: 1.2
          adjustment-factor: 0.2
          minimum-price: 0.01
          maximum-price: 999999.99
          premium-threshold: 100.0
        calculation-rules:
          - rule-name: "premium-eligibility-check"
            rule-condition: "#basePrice >= 100.0"
            rule-description: "Premium pricing available for items >= $100"
            rule-action: "VALIDATE"
          - rule-name: "premium-markup-calculation"
            rule-condition: "#basePrice >= 100.0"
            rule-calculation: "#basePrice * 1.2"
            rule-description: "Apply 20% premium markup"
            rule-action: "CALCULATE"
          - rule-name: "premium-fallback-calculation"
            rule-condition: "#basePrice < 100.0"
            rule-calculation: "#basePrice"
            rule-description: "Use base price for items under $100"
            rule-action: "FALLBACK"
        validation-requirements:
          - "Premium eligibility must be checked"
          - "Markup must be applied correctly"
          - "Fallback logic must work"
        audit-requirements:
          - "Log premium eligibility checks"
          - "Track premium markup applications"
          
      premium-tiered-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Premium Tiered Pricing Model"
        model-description: "Tiered premium pricing based on price ranges"
        calculation-parameters:
          tier-1-threshold: 100.0
          tier-1-multiplier: 1.1
          tier-2-threshold: 500.0
          tier-2-multiplier: 1.2
          tier-3-threshold: 1000.0
          tier-3-multiplier: 1.25
        calculation-rules:
          - rule-name: "premium-tier-1"
            rule-condition: "#basePrice >= 100.0 && #basePrice < 500.0"
            rule-calculation: "#basePrice * 1.1"
            rule-description: "10% premium for $100-$499 range"
            rule-action: "CALCULATE"
          - rule-name: "premium-tier-2"
            rule-condition: "#basePrice >= 500.0 && #basePrice < 1000.0"
            rule-calculation: "#basePrice * 1.2"
            rule-description: "20% premium for $500-$999 range"
            rule-action: "CALCULATE"
          - rule-name: "premium-tier-3"
            rule-condition: "#basePrice >= 1000.0"
            rule-calculation: "#basePrice * 1.25"
            rule-description: "25% premium for $1000+ range"
            rule-action: "CALCULATE"
        validation-requirements:
          - "Tier determination must be accurate"
          - "Tier-specific multipliers must be applied"
        audit-requirements:
          - "Log tier assignments"
          - "Track tier-based pricing distribution"
    model-settings:
      tiered-calculation: true
      eligibility-checking: true
      fallback-support: true
    
  sale-pricing-models:
    model-type: "sale-pricing-models"
    model-name: "Sale Pricing Models"
    description: "Models for sale pricing calculations"
    model-characteristics:
      pricing-category: "SALE"
      calculation-method: "DISCOUNT"
      adjustment-type: "PERCENTAGE_DECREASE"
    calculation-models:
      sale-discount-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Sale Discount Calculation Model"
        model-description: "Sale pricing with 20% discount"
        calculation-parameters:
          base-multiplier: 0.8
          adjustment-factor: -0.2
          minimum-price: 0.01
          maximum-price: 999999.99
          discount-percentage: 0.2
        calculation-rules:
          - rule-name: "sale-discount-calculation"
            rule-condition: "true"
            rule-calculation: "#basePrice * 0.8"
            rule-description: "Apply 20% sale discount"
            rule-action: "CALCULATE"
          - rule-name: "sale-minimum-price-check"
            rule-condition: "(#basePrice * 0.8) >= 0.01"
            rule-description: "Sale price must be at least $0.01"
            rule-action: "VALIDATE"
          - rule-name: "sale-price-normalization"
            rule-condition: "true"
            rule-calculation: "T(java.math.BigDecimal).valueOf(#basePrice * 0.8).setScale(2, T(java.math.RoundingMode).HALF_UP).doubleValue()"
            rule-description: "Normalize sale price to 2 decimal places"
            rule-action: "NORMALIZE"
        validation-requirements:
          - "Discount must be applied correctly"
          - "Minimum price must be maintained"
          - "Price must be normalized"
        audit-requirements:
          - "Log sale discount applications"
          - "Track discount effectiveness"
          
      sale-tiered-discount-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Sale Tiered Discount Model"
        model-description: "Tiered sale discounts based on price ranges"
        calculation-parameters:
          tier-1-threshold: 0.0
          tier-1-discount: 0.15
          tier-2-threshold: 200.0
          tier-2-discount: 0.20
          tier-3-threshold: 500.0
          tier-3-discount: 0.25
        calculation-rules:
          - rule-name: "sale-tier-1-discount"
            rule-condition: "#basePrice < 200.0"
            rule-calculation: "#basePrice * 0.85"
            rule-description: "15% discount for items under $200"
            rule-action: "CALCULATE"
          - rule-name: "sale-tier-2-discount"
            rule-condition: "#basePrice >= 200.0 && #basePrice < 500.0"
            rule-calculation: "#basePrice * 0.80"
            rule-description: "20% discount for $200-$499 range"
            rule-action: "CALCULATE"
          - rule-name: "sale-tier-3-discount"
            rule-condition: "#basePrice >= 500.0"
            rule-calculation: "#basePrice * 0.75"
            rule-description: "25% discount for $500+ range"
            rule-action: "CALCULATE"
        validation-requirements:
          - "Tier-based discounts must be applied correctly"
          - "Discount tiers must be mutually exclusive"
        audit-requirements:
          - "Log tiered discount applications"
          - "Track discount tier usage"
    model-settings:
      discount-optimization: true
      tiered-discounts: true
      minimum-price-protection: true
    
  clearance-pricing-models:
    model-type: "clearance-pricing-models"
    model-name: "Clearance Pricing Models"
    description: "Models for clearance pricing calculations"
    model-characteristics:
      pricing-category: "CLEARANCE"
      calculation-method: "DEEP_DISCOUNT"
      adjustment-type: "PERCENTAGE_DECREASE"
    calculation-models:
      clearance-discount-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Clearance Discount Calculation Model"
        model-description: "Clearance pricing with 50% discount"
        calculation-parameters:
          base-multiplier: 0.5
          adjustment-factor: -0.5
          minimum-price: 0.01
          maximum-price: 999999.99
          discount-percentage: 0.5
        calculation-rules:
          - rule-name: "clearance-discount-calculation"
            rule-condition: "true"
            rule-calculation: "#basePrice * 0.5"
            rule-description: "Apply 50% clearance discount"
            rule-action: "CALCULATE"
          - rule-name: "clearance-minimum-price-check"
            rule-condition: "(#basePrice * 0.5) >= 0.01"
            rule-description: "Clearance price must be at least $0.01"
            rule-action: "VALIDATE"
          - rule-name: "clearance-price-floor"
            rule-condition: "(#basePrice * 0.5) < 1.0"
            rule-calculation: "T(java.lang.Math).max(#basePrice * 0.5, 1.0)"
            rule-description: "Maintain minimum $1.00 clearance price"
            rule-action: "FLOOR"
        validation-requirements:
          - "Deep discount must be applied"
          - "Price floor must be maintained"
          - "Minimum price protection required"
        audit-requirements:
          - "Log clearance discount applications"
          - "Track price floor applications"
          
      clearance-liquidation-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Clearance Liquidation Model"
        model-description: "Aggressive clearance pricing for liquidation"
        calculation-parameters:
          base-multiplier: 0.3
          adjustment-factor: -0.7
          minimum-price: 0.50
          maximum-price: 999999.99
          liquidation-threshold: 1000.0
        calculation-rules:
          - rule-name: "liquidation-eligibility"
            rule-condition: "#basePrice >= 1000.0"
            rule-description: "Liquidation pricing for high-value items"
            rule-action: "VALIDATE"
          - rule-name: "liquidation-discount-calculation"
            rule-condition: "#basePrice >= 1000.0"
            rule-calculation: "#basePrice * 0.3"
            rule-description: "Apply 70% liquidation discount"
            rule-action: "CALCULATE"
          - rule-name: "standard-clearance-fallback"
            rule-condition: "#basePrice < 1000.0"
            rule-calculation: "#basePrice * 0.5"
            rule-description: "Standard clearance for lower-value items"
            rule-action: "FALLBACK"
        validation-requirements:
          - "Liquidation eligibility must be checked"
          - "Appropriate discount must be applied"
          - "Fallback logic must work"
        audit-requirements:
          - "Log liquidation pricing decisions"
          - "Track liquidation effectiveness"
    model-settings:
      deep-discount-support: true
      price-floor-protection: true
      liquidation-optimization: true
    
  default:
    model-type: "default"
    model-name: "Default Pricing Calculation Models"
    description: "Default pricing calculation model processing"
    calculation-models:
      default-model:
        model-id: "pricing-calculation-models-configuration"
        model-name: "Default Model"
        calculation-rules:
          - rule-name: "default-calculation"
            rule-calculation: "#basePrice"
            rule-description: "Default price calculation"
    model-settings:
      default-processing: true

# Model execution patterns
execution-patterns:
  pricing-category-pattern:
    pattern-name: "Pricing Category Pattern"
    description: "Execute models based on pricing categories"
    pricing-categories: ["STANDARD", "PREMIUM", "SALE", "CLEARANCE"]
    
  calculation-method-pattern:
    pattern-name: "Calculation Method Pattern"
    description: "Execute models based on calculation methods"
    calculation-methods: ["BASE_PRICE", "MARKUP", "DISCOUNT", "DEEP_DISCOUNT"]
    
  adjustment-type-pattern:
    pattern-name: "Adjustment Type Pattern"
    description: "Execute models based on adjustment types"
    adjustment-types: ["NONE", "PERCENTAGE_INCREASE", "PERCENTAGE_DECREASE"]

# Quality assurance
quality-assurance:
  model-accuracy:
    - "Pricing calculation models must be accurate"
    - "Mathematical calculations must be precise"
    - "Validation rules must be comprehensive"
    - "Normalization must be consistent"
    
  model-reliability:
    - "Models must be repeatable"
    - "Calculations must be deterministic"
    - "Validation must be robust"
    - "Performance must be acceptable"
    
  business-alignment:
    - "Models must reflect pricing strategy"
    - "Calculations must be transparent"
    - "Validation must meet business rules"
    - "Results must be actionable"
