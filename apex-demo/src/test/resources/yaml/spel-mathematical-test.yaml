metadata:
  id: "spel-mathematical-test"
  name: "SpEL Mathematical Expressions Test"
  version: "1.0.0"
  description: "Test SpEL mathematical expressions and Java Math class functions"
  type: "rule-config"
  author: "apex-test-suite@example.com"
  created-date: "2025-09-14"
  tags: ["apex-test", "spel", "mathematical", "calculations"]

# SpEL mathematical expressions testing
enrichments:
  - id: "interest-calculation"
    name: "interest-calculation"
    type: "calculation-enrichment"
    description: "Calculate total interest using mathematical expressions"
    condition: "#principal != null && #interestRate != null && #years != null"
    calculation-config:
      expression: "#principal * #interestRate * #years"
      result-field: "totalInterest"
    field-mappings:
      - source-field: "totalInterest"
        target-field: "totalInterest"

  - id: "notional-value-calculation"
    name: "notional-value-calculation"
    type: "calculation-enrichment"
    description: "Calculate notional value using multiplication"
    condition: "#quantity != null && #price != null"
    calculation-config:
      expression: "#quantity * #price"
      result-field: "notionalValue"
    field-mappings:
      - source-field: "notionalValue"
        target-field: "notionalValue"

  - id: "fee-calculation"
    name: "fee-calculation"
    type: "calculation-enrichment"
    description: "Calculate fee based on notional value"
    condition: "#quantity != null && #price != null && #feeRate != null"
    calculation-config:
      expression: "(#quantity * #price) * #feeRate"
      result-field: "calculatedFee"
    field-mappings:
      - source-field: "calculatedFee"
        target-field: "calculatedFee"

  - id: "net-amount-calculation"
    name: "net-amount-calculation"
    type: "calculation-enrichment"
    description: "Calculate net amount after fees"
    condition: "#quantity != null && #price != null && #feeRate != null"
    calculation-config:
      expression: "(#quantity * #price) - ((#quantity * #price) * #feeRate)"
      result-field: "netAmount"
    field-mappings:
      - source-field: "netAmount"
        target-field: "netAmount"

  - id: "max-value-calculation"
    name: "max-value-calculation"
    type: "calculation-enrichment"
    description: "Calculate maximum value using Java Math class"
    condition: "#principal != null && #quantity != null && #price != null"
    calculation-config:
      expression: "T(java.lang.Math).max(#principal, #quantity * #price)"
      result-field: "maxValue"
    field-mappings:
      - source-field: "maxValue"
        target-field: "maxValue"

  - id: "rounded-value-calculation"
    name: "rounded-value-calculation"
    type: "calculation-enrichment"
    description: "Calculate rounded value to 2 decimal places"
    condition: "#quantity != null && #price != null && #feeRate != null"
    calculation-config:
      expression: "T(java.lang.Math).round(((#quantity * #price) - ((#quantity * #price) * #feeRate)) * 100) / 100.0"
      result-field: "roundedValue"
    field-mappings:
      - source-field: "roundedValue"
        target-field: "roundedValue"
