# ============================================================================
# APEX Rules Engine - Test Logging Configuration
# ============================================================================
#
# This configuration ensures comprehensive logging during test execution
# with permanent output capture for analysis and debugging.
#
# All test logs are captured to files in target/surefire-reports/
# and can be analyzed after test execution.
#
# ============================================================================

# Root logger configuration - capture everything at INFO level and above
.level = INFO

# Console handler for immediate feedback during test runs
handlers = java.util.logging.ConsoleHandler, java.util.logging.FileHandler

# Console Handler Configuration
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# File Handler Configuration for permanent logging
java.util.logging.FileHandler.pattern = target/test-logs/apex-tests-%u.log
java.util.logging.FileHandler.limit = 10485760
java.util.logging.FileHandler.count = 5
java.util.logging.FileHandler.level = ALL
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.append = true

# Custom formatter for detailed test logging
java.util.logging.SimpleFormatter.format = %1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS.%1$tL %4$s [%3$s] %5$s %6$s%n

# ============================================================================
# APEX RULES ENGINE SPECIFIC LOGGERS
# ============================================================================

# Core Rules Engine - capture all rule evaluation and configuration
dev.mars.apex.core.engine.level = INFO
dev.mars.apex.core.engine.config.level = INFO
dev.mars.apex.core.api.level = INFO

# Data Service Management - capture data source operations
dev.mars.apex.core.service.data.level = INFO

# YAML Processing - capture validation and dependency analysis
dev.mars.apex.core.util.level = INFO
dev.mars.apex.core.config.yaml.level = INFO

# Audit logging - capture all rule execution audit trails
dev.mars.apex.audit.level = INFO

# Demo module logging
dev.mars.apex.demo.level = INFO

# ============================================================================
# TEST-SPECIFIC LOGGERS
# ============================================================================

# Test classes - ensure all test output is captured
dev.mars.apex.core.api.SimpleRulesEngineTest.level = ALL
dev.mars.apex.core.util.YamlMetadataValidatorTest.level = ALL
dev.mars.apex.core.util.YamlDependencyAnalyzerRealFilesTest.level = ALL
dev.mars.apex.demo.service.MockDataSourceTest.level = ALL
dev.mars.apex.demo.service.DataServiceManagerTest.level = ALL

# ============================================================================
# EXTERNAL LIBRARY LOGGERS
# ============================================================================

# Testcontainers - reduce noise but capture important events
org.testcontainers.level = WARNING
com.github.dockerjava.level = WARNING

# Spring Expression Language - capture evaluation details
org.springframework.expression.level = INFO

# Database drivers - capture connection and query information
org.postgresql.level = INFO
com.zaxxer.hikari.level = INFO

# ============================================================================
# INTENTIONAL ERROR TESTING CONFIGURATION
# ============================================================================

# Special configuration for intentional error tests
# These loggers help distinguish between real errors and expected test behavior

# When tests intentionally trigger errors, they should be logged at WARNING level
# (not SEVERE/FATAL) to distinguish from real production errors
dev.mars.apex.test.intentional.level = WARNING

# ============================================================================
# PERFORMANCE AND MONITORING
# ============================================================================

# Performance monitoring during tests
dev.mars.apex.performance.level = INFO

# Memory and resource usage monitoring
java.util.logging.MemoryHandler.level = INFO
java.util.logging.MemoryHandler.size = 1000
java.util.logging.MemoryHandler.push = WARNING

# ============================================================================
# SECURITY AND COMPLIANCE LOGGING
# ============================================================================

# Security-related operations during tests
java.security.level = WARNING
javax.net.ssl.level = WARNING

# ============================================================================
# DEVELOPMENT AND DEBUGGING
# ============================================================================

# Enable detailed logging for development and debugging
# Uncomment these lines for verbose debugging during test development

# dev.mars.apex.level = FINE
# org.springframework.expression.spel.level = FINE
# java.util.logging.ConsoleHandler.level = FINE

# ============================================================================
# SPECIAL TEST SCENARIOS
# ============================================================================

# Integration tests with external systems
dev.mars.apex.integration.level = INFO

# Performance tests
dev.mars.apex.performance.level = INFO

# Load tests
dev.mars.apex.load.level = INFO

# Error handling tests - ensure intentional errors are properly documented
dev.mars.apex.error.handling.level = INFO
